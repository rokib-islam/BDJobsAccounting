@using Microsoft.AspNetCore.Http;
@{
    ViewData["Title"] = "OnlinePaymentVarification";
    var userId = Context.Session.GetInt32("UserID");
}
<script src="https://ajax.googleapis.com/ajax/libs/angularjs/1.7.9/angular.min.js"></script>
<div ng-app="myApp">
    <div ng-controller="myController">
        <div class="row">
            <h5 style="margin-top:-10px" class="alert-primary text-center">Online Payment Varification</h5>

            <div class="col-sm-3">
                <label>From Date:</label>
                <input type="date" class="form-control form-control-sm" ng-model="fromDate" />
            </div>
            <div class="col-sm-3">
                <label>To Date:</label>
                <input type="date" class="form-control form-control-sm" ng-model="toDate" />
            </div>
            <div class="col-sm-3">
                <label>Filter By:</label>
                <select class="form-control form-control-sm" ng-model="verified">
                    <option value="">All</option>
                    <option value="1">Verified</option>
                    <option value="2">Rejected</option>
                </select>
            </div>
            <div class="col-sm-3 mt-4">
                <button class="btn btn-primary btn-sm px-4" ng-click="search()">Search</button>
            </div>


            <div class="col-sm-12">
                <div class="row">
                    <div class="col-sm-5">
                        <div class="pull-left text-left" style="margin-top:20px;" ng-show="isVisible">
                            Show
                            <select id="page" ng-model="itemsPerPage">
                                <option value="10">10</option>
                                <option value="20">20</option>
                                <option value="40">40</option>
                                <option value="50" selected>50</option>
                                <option value="60">60</option>
                                <option value="80">80</option>
                                <option value="100">100</option>
                                <option value="500">500</option>
                                <option value="1000">1000</option>
                                <option value="3000">3000</option>
                                <option value="5000">5000</option>
                                <option value="10000">10000</option>
                                <option value="10000000">All</option>
                            </select>
                            entries per page. (Total:{{totalItems}} data)

                        </div>
                    </div>
                    <div class="col-sm-7 d-flex justify-content-end">
                        <nav aria-label="..." class="mt-3">
                            <ul class="pagination">
                                <li class="page-item" ng-class="{ disabled: currentPage === 1 }">
                                    <a class="page-link" href="#" ng-click="setCurrentPage(currentPage - 1)" aria-label="Previous">
                                        <span aria-hidden="true">&laquo;</span>
                                    </a>
                                </li>

                                <li class="page-item" ng-repeat="page in getPages()" ng-class="{ active: currentPage === page }">
                                    <a class="page-link" href="#" ng-click="setCurrentPage(page)">{{ page }}</a>
                                </li>

                                <li class="page-item" ng-class="{ disabled: currentPage === totalPages }">
                                    <a class="page-link" href="#" ng-click="setCurrentPage(currentPage + 1)" aria-label="Next">
                                        <span aria-hidden="true">&raquo;</span>
                                    </a>
                                </li>
                            </ul>
                        </nav>
                    </div>
                </div>
                
            </div>

            <table ng-show="showTable" class="table table-bordered table-sm mt-1" style="font-size:15px">
                <tr style="background-color:skyblue ; text-align: center">
                    <th>#</th>
                    <th>Bill</th>
                    <th>Company</th>
                    <th>Service</th>
                    <th>Billing Contact Info</th>
                    <th>Payment Info</th>
                    <th>Action</th>
                </tr>
                <tbody>
                    <tr ng-repeat="data in paymentVarificationData">
                        <td>{{$index + 1}}</td>
                        <td>Question: {{data.quotationID}} <br />
                            {{data.quotationNo}} <br /> 
                            {{data.uploadDateTime}}
                        </td>
                        <td>{{data.companyName}} <br /> 
                            {{data.companyAddress}} <br /> 
                            Company ID: {{data.companyID}} <br /> 
                            AGM: {{data.companyAGM}}
                        </td>
                        <td>{{data.serviceName}} <br /> 
                            {{data.jobTitle}} <br /> 
                            Invoice No: {{data.invoiceNo}} <br />
                            Job ID: {{data.jobID}} <br /> 
                            Total Cost: {{data.totalCost}}
                        </td>
                        <td>{{data.billerName}} <br /> 
                            {{data.billerEmail}} <br /> 
                            {{data.billerMobile}}
                        </td>
                        <td>
                            {{data.referenceNo}} <br />
                            <a href="{{data.paymentDocumentLink}}" target="_blank">Payment Document Link</a>
                        </td>
                       @*  <td>
                            {{data.billerEmail}} <br />
                            {{data.billerMobile}}
                        </td> *@
                        <td>
                            <span ng-if="data.verified == 1">Verified</span>
                            <span ng-if="data.verified == 2">Rejected.  <br /> 
                                comment: {{data.comment}}</span>
                            <div ng-if="!data.verified">
                                <input type="radio" ng-model="data.verification" value="1"> Verify Payment
                                <input type="radio" ng-model="data.verification" value="2"> Reject
                                <input type="text" ng-model="data.Comment" placeholder="Reject Comment" >
                                <button class="btn btn-success btn-sm mt-1" ng-click="submit(data.quotationID, data.verification,data.Comment )">Submit</button>
                            </div>
                        </td>

                    </tr>
                </tbody>
            </table>
        </div>
    </div>
</div>

<script>
    var app = angular.module('myApp', []);
    app.controller('myController', function ($scope, $http) {
        angular.element(document).ready(function () {
            $scope.search();
            $scope.showTable = false;
            $scope.isVisible = false;

            $scope.itemsPerPage = '20';
            $scope.maxPageLength = 5;
            $scope.currentPage = 1;
            $scope.totalItems = 0;
        })
        
        $scope.submit = function (qId, verification, Comment) {
            var requestData = {
                QID: qId,
                verified: verification,
                verifiedBy: @userId,
                Comment: Comment
            };

            let Url = '';
            if (window.location.hostname == 'localhost')
                Url = '/Invoice/VarifyOrReject';
            else
                Url = '/AccountingNew/Invoice/VarifyOrReject';

            $http.post(Url, JSON.stringify(requestData), { headers: { 'Content-Type': 'application/json' } })
                .then(function (response) {
                    $scope.search();
                   alert(response);
                }, function (error) {
                    console.error(error);
                })
        };

        $scope.search = function () {
            var requestData = {
                fromDate: $scope.fromDate == undefined ? "" : $scope.fromDate,
                toDate: $scope.toDate == undefined ? "" : $scope.toDate,
                verified: $scope.verified == undefined ? "" : $scope.verified,
                pageNo: $scope.currentPage == undefined ? 1 : $scope.currentPage,
                pageSize: $scope.itemsPerPage == undefined ? 20 : $scope.itemsPerPage
            };

            let Url = '';
            if (window.location.hostname == 'localhost')
                Url = '/Invoice/loadOnlinePaymentVarificationData';
            else
                Url = '/AccountingNew/Invoice/loadOnlinePaymentVarificationData';

            $http.post(Url, JSON.stringify(requestData), { headers: { 'Content-Type': 'application/json' } })
                .then(function (response) {
                    $scope.paymentVarificationData = response.data.data;
                    $scope.totalItems = response.data.totalRecords;
                    $scope.showTable = true;
                    $scope.isVisible = true;
                }, function (error) {
                    console.error(error);
                })
        }


        $scope.$watch('totalItems', function () {
            $scope.calculatePages();
        });

        $scope.$watch('itemsPerPage', function () {
            $scope.calculatePages();
        });

        $scope.$watch('currentPage', function () {
            if ($scope.currentPage > 1) {
                $scope.calculatePages();
                $scope.search();
            }
            else {
                $scope.calculatePages();
            }

        });

        $scope.calculatePages = function () {
            $scope.totalPages = Math.ceil($scope.totalItems / $scope.itemsPerPage);
            $scope.pages = [];

            var startPage = Math.max(1, $scope.currentPage - Math.floor($scope.maxPageLength / 2));
            var endPage = Math.min($scope.totalPages, startPage + $scope.maxPageLength - 1);

            for (var i = startPage; i <= endPage; i++) {
                $scope.pages.push(i);
            }
        };

        $scope.getPages = function () {
            return $scope.pages || [];
        };

        $scope.setCurrentPage = function (page) {
            if (page >= 1 && page <= $scope.totalPages) {
                $scope.currentPage = page;
            }
        };
    })
</script>
