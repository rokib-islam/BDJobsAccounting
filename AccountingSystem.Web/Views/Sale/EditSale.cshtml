@using Microsoft.AspNetCore.Http
@{
    ViewData["Title"] = "EditSale";
    var userId = Context.Session.GetInt32("UserID");
    var accessRight = Context.Session.GetString("AccessRight");

    var accessRights = new string[0];

    if (string.IsNullOrEmpty(accessRight))
    {
                                        <script type="text/javascript">
                                            window.location.href = '@Url.Action("Index", "Home")';
                                        </script>
    }
    else
    {
        accessRights = accessRight.Split(',');
    }
}

<style>
    .selected-row {
        border: 3px solid black !important;
    }
</style>

<script src="https://ajax.googleapis.com/ajax/libs/angularjs/1.7.9/angular.min.js"></script>

<h3 class="text-center alert-primary" style="margin-top:-10px">Edit Sale</h3>

<div ng-app="myApp">
    <div ng-controller="myController">
        <div class="col-sm-12">
            <div class="row">
                <div class="col-sm-6">
                    <div class="form-group row">
                        <label class="col-sm-3 col-form-label">Company</label>
                        <div class="col-sm-9">
                            <input class="form-control form-control-sm" placeholder="Search Company Here" autocomplete="off" ng-model="company" ng-keyup="searchCompany(company)">
                            @* <select class="form-control form-control-sm" size="10" ng-model="comList" style="position:absolute;z-index:999;width: 200px; overflow:auto ;background: white none repeat scroll 0% 0%;" ng-show="companyList.length > 0">
                            <option ng-repeat="company in companyList" value="{{company.id}}" ng-click="selectCompany(company)">{{company.name}}</option>
                            </select> *@
                        </div>
                    </div>
                    <div>Select a company</div>
                    <select class="form-control form-control-sm" size="10" ng-model="comList" style="height:225px;border:2px solid gray">
                        <option ng-repeat="company in companyList" value="{{company.id}}" ng-click="selectCompany(company)">{{company.name}}</option>
                    </select>

                    <div class="row mt-2">
                        <div class="col-sm-3">
                            <button class="btn btn-success btn-sm" ng-click="regularSalesBtn()">Regular List</button>
                        </div>
                        <div class="col-sm-3">
                            <button class="btn btn-primary btn-sm" ng-click="deletedSalesBtn()">Deleted List</button>
                        </div>
                    </div>
                </div>
                <div class="col-sm-6">
                    <div class="px-3 py-3" style="border:2px solid gray">
                        <div class="form-group row">
                            <label class="col-sm-3 col-form-label">Sales Price</label>
                            <div class="col-sm-9">
                                <input type="number" class="form-control form-control-sm text-end" ng-model="salesPrice">
                            </div>
                        </div>
                        <div class="form-group row">
                            <label class="col-sm-3 col-form-label">VAT Amount</label>
                            <div class="col-sm-9">
                                <input type="number" class="form-control form-control-sm text-end" ng-model="vatAmount">
                            </div>
                        </div>
                        <div class="form-group row">
                            <label class="col-sm-2 col-form-label mt-3">Duration</label>
                            <div class="col-sm-4">
                                <label>From Date</label>
                                <input type="date" ng-change="updateDuration()" class="form-control form-control-sm" ng-model="fromDate">
                            </div>
                            <div class="col-sm-4">
                                <label>To Date</label>
                                <input type="date" ng-change="updateDuration()" class="form-control form-control-sm" ng-model="toDate">
                            </div>
                            <div class="col-sm-2">
                                <label>Duration</label>
                                <input class="form-control form-control-sm text-center" ng-model="duration">
                            </div>
                        </div>
                        <div class="form-group row mt-2">
                            <label class="col-sm-3 col-form-label">Billing Contact</label>
                            <div class="col-sm-9">
                                <select class="form-control form-control-sm" ng-model="billingContact">
                                    <option value="0" selected>Select</option>
                                    <option ng-repeat="o in getBillingPersonData" value="{{o.id}}">{{o.name}}</option>
                                </select>
                            </div>
                        </div>
                        <div class="form-group row">
                            <label class="col-sm-3 col-form-label">Ref No.</label>
                            <div class="col-sm-9">
                                <input type="number" class="form-control form-control-sm" ng-model="refNo">
                            </div>
                        </div>
                        <div class="form-group row">
                            <label class="col-sm-3 col-form-label">Sales Person</label>
                            <div class="col-sm-9">
                                <select class="form-control form-control-sm" ng-model="salesPerson">
                                    <option value="0" selected>select</option>
                                    <option ng-repeat="o in salesPersons" value="{{o.salesPersonID}}">{{o.salesPersonName}}</option>
                                </select>
                            </div>
                        </div>
                    </div>

                </div>



            </div>
            <div class="col-sm-12 mt-3">
                <div class="pull-left text-left" ng-show="isVisible">
                    <div class="col-sm-12 row">
                        <div class="col-sm-6">
                            Show
                            <select id="page" ng-model="itemsPerPage">
                                <option value="10">10</option>
                                <option value="20">20</option>
                                <option value="40">40</option>
                                <option value="50" selected>50</option>
                                <option value="60">60</option>
                                <option value="80">80</option>
                                <option value="100">100</option>
                                <option value="500">500</option>
                                <option value="1000">1000</option>
                                <option value="3000">3000</option>
                                <option value="5000">5000</option>
                                <option value="10000">10000</option>
                                <option value="10000000">All</option>
                            </select>
                            entries per page. (Total:{{totalItems}} data)
                        </div>
                        <div class="col-sm-6 d-flex justify-content-end">
                            <nav aria-label="...">
                                <ul class="pagination">
                                    <li class="page-item" ng-class="{ disabled: currentPage === 1 }">
                                        <a class="page-link" href="#" ng-click="setCurrentPage(currentPage - 1)" aria-label="Previous">
                                            <span aria-hidden="true">&laquo;</span>
                                        </a>
                                    </li>

                                    <!-- The ng-repeat code you provided -->
                                    <li class="page-item" ng-repeat="page in getPages()" ng-class="{ active: currentPage === page }">
                                        <a class="page-link" href="#" ng-click="setCurrentPage(page)">{{ page }}</a>
                                    </li>

                                    <li class="page-item" ng-class="{ disabled: currentPage === totalPages }">
                                        <a class="page-link" href="#" ng-click="setCurrentPage(currentPage + 1)" aria-label="Next">
                                            <span aria-hidden="true">&raquo;</span>
                                        </a>
                                    </li>
                                </ul>
                            </nav>
                        </div>
                    </div>
                </div>
            </div>



            <div style="height: 200px; overflow-y: auto;border:2px solid gray" ng-show="showTable">
                <table class="table table-bordered table-striped table-sm" style="white-space:nowrap;">
                    <thead class="table-info">
                        <tr>
                            <th style="text-align:center">SNo</th>
                            <th style="text-align:center">Product name</th>
                            <th style="text-align:center">From</th>
                            <th style="text-align:center">To</th>
                            <th style="text-align:center">Duration</th>
                            <th style="text-align:center">Price(Tk)</th>
                            <th style="text-align:center">Due(Tk)</th>
                            <th style="text-align:center">Posted</th>
                            <th style="text-align:center">VAT(Tk)</th>
                            <th style="text-align:center">Invoice No</th>
                        </tr>
                    </thead>
                    <tbody style="height:130px">
                        <tr ng-repeat="o in salesData" ng-click="selectRegularRow(o, $index+1)" ng-class="{'selected-row':o===selectedRow}" ng-style="{'background-color': o.isCancel == 1 ? '#FF7D7D' : ''}">
                            <td style="text-align:center">{{$index+1}}</td>
                            <td style="text-align:center">{{o.sbName}}</td>
                            <td style="text-align:center">{{o.from}}</td>
                            <td style="text-align:center">{{o.to}}</td>
                            <td style="text-align:center">{{o.duration}}</td>
                            <td style="text-align:right">{{o.salesPrice | number:2}}</td>
                            <td style="text-align:right">{{o.accReceivale | number:2}}</td>
                            <td style="text-align:center">{{o.posted ? 'Yes' : 'No'}}</td>
                            <td style="text-align:right">{{o.tax | number:2}}</td>
                            <td style="text-align:center">{{o.invoiceNo}}</td>
                        </tr>
                    </tbody>
                    <tr>
                        <th colspan="5" style="text-align:right">Total</th>
                        <th style="text-align:right">{{sumTotalAmount | number:2}}</th>
                        <th style="text-align:right">{{sumDuesAmount | number:2}}</th>
                        <th colspan="3"></th>

                    </tr>
                </table>
            </div>


            <div class="col-sm-12">
                <div class="pull-left text-left" ng-show="isVisibleDelete">
                    <div class="col-sm-12 row">
                        <div class="col-sm-6">
                            Show
                            <select id="page" ng-model="itemsPerPage">
                                <option value="10">10</option>
                                <option value="20">20</option>
                                <option value="40">40</option>
                                <option value="50" selected>50</option>
                                <option value="60">60</option>
                                <option value="80">80</option>
                                <option value="100">100</option>
                                <option value="500">500</option>
                                <option value="1000">1000</option>
                                <option value="3000">3000</option>
                                <option value="5000">5000</option>
                                <option value="10000">10000</option>
                                <option value="10000000">All</option>
                            </select>
                            entries per page. (Total:{{totalItems}} data)
                        </div>
                        <div class="col-sm-6 d-flex justify-content-end">
                            <nav aria-label="...">
                                <ul class="pagination">
                                    <li class="page-item" ng-class="{ disabled: currentPage === 1 }">
                                        <a class="page-link" href="#" ng-click="setCurrentPage(currentPage - 1)" aria-label="Previous">
                                            <span aria-hidden="true">&laquo;</span>
                                        </a>
                                    </li>

                                    <!-- The ng-repeat code you provided -->
                                    <li class="page-item" ng-repeat="page in getPages()" ng-class="{ active: currentPage === page }">
                                        <a class="page-link" href="#" ng-click="setCurrentPage(page)">{{ page }}</a>
                                    </li>

                                    <li class="page-item" ng-class="{ disabled: currentPage === totalPages }">
                                        <a class="page-link" href="#" ng-click="setCurrentPage(currentPage + 1)" aria-label="Next">
                                            <span aria-hidden="true">&raquo;</span>
                                        </a>
                                    </li>
                                </ul>
                            </nav>
                        </div>
                    </div>
                </div>
            </div>


            <div style="height: 200px; overflow-y: auto;border:2px solid gray" ng-show="showDeletedTable">
                <table class="table table-bordered table-striped table-sm">
                    <thead class="table-info">
                        <tr>
                            <th style="text-align:center">SNo</th>
                            <th style="text-align:center">Product name</th>
                            <th style="text-align:center">Invoice No</th>
                            <th style="text-align:center">Deleted Date</th>
                            <th style="text-align:center">Price(Tk)</th>
                            <th style="text-align:center">VAT(Tk)</th>
                            <th style="text-align:center">Deleted Reason</th>
                        </tr>
                    </thead>
                    <tbody style="height:130px">
                        <tr ng-repeat="o in deletedSalesData">
                            <td style="text-align:center">{{$index+1}}</td>
                            <td style="text-align:center">{{o.serviceName}}</td>
                            <td style="text-align:center">{{o.invoiceNo}}</td>
                            <td style="text-align:center">{{o.cancellationDate"}}</td>
                            <td style="text-align:right">{{o.totalPrice | number:2}}</td>
                            <td style="text-align:right">{{o.totalVat | number:2}}</td>
                            <td style="text-align:center">{{o.deleteReason}}</td>
                        </tr>

                    </tbody>
                    <tr>
                        <th colspan="4" style="text-align:right">Total</th>
                        <th style="text-align:right">{{sumTotalPrice | number:2}}</th>
                        <th style="text-align:right">{{sumTotalVat | number:2}}</th>
                        <th></th>
                    </tr>
                </table>
            </div>
            <div class="row mt-2">
                <div class="col-sm-3">
                    <button class="btn btn-danger btn-sm px-4" ng-click="delete()" ng-disabled="deleteBtn">Delete</button>
                </div>
                <div class="col-sm-3">
                    <button class="btn btn-primary btn-sm px-4" ng-click="update()" ng-disabled="updateBtn">Update</button>
                </div>
                <div class="col-sm-3 text-end">
                    <button class="btn btn-success btn-sm" ng-click="makeJournal()" ng-disabled="makeJournalBtn">Make Journal</button>
                </div>
                <div class="col-sm-3 text-end">
                    <button class="btn btn-warning btn-sm" ng-click="makeInvoice()" ng-disabled="makeInvoiceBtn">Make Invoice</button>
                </div>
            </div>
        </div>

        <div class="modal fade" id="deletedReasonModal" tabindex="-1" aria-labelledby="exampleModalLabel" aria-hidden="true">
            <div class="modal-dialog">
                <div class="modal-content">
                    <div class="modal-header">
                        <h5 class="modal-title" id="exampleModalLabel">Sale Delete Reason</h5>
                        <button type="button" class="btn-close btn-sm" data-bs-dismiss="modal" aria-label="Close"></button>
                    </div>
                    <div class="modal-body px-4">
                        <div class="row">
                            <label>Delete Reason</label>
                            <textarea type="text" ng-model="reason" class="form-control form-control-sm"></textarea>
                        </div>
                        <div class="row">
                            <label>Delete Date</label>
                            <input type="date" ng-model="deleteDate" class="form-control form-control-sm" />
                        </div>
                    </div>
                    <div class="modal-footer">
                        <button type="button" class="btn btn-secondary btn-sm" data-bs-dismiss="modal">Close</button>
                        <button type="button" class="btn btn-primary btn-sm" ng-click="finalDelete()">Delete</button>
                    </div>
                </div>
            </div>
        </div>

        <div class="modal fade" id="makeJournalModal" tabindex="-1" aria-labelledby="exampleModalLabel" aria-hidden="true">
            <div class="modal-dialog">
                <div class="modal-content">
                    <div class="modal-header">
                        <h5 class="modal-title" id="exampleModalLabel">Journal Date</h5>
                        <button type="button" class="btn-close btn-sm" data-bs-dismiss="modal" aria-label="Close"></button>
                    </div>
                    <div class="modal-body">
                        <div class="row px-5">
                            <p class="text-center">Give the journal date.</p>
                            <input type="date" ng-model="journalDate" class="col-sm-8 offset-2 form-control form-control-sm" />
                        </div>
                    </div>
                    <div class="modal-footer">
                        <button type="button" class="btn btn-secondary btn-sm" data-bs-dismiss="modal">Close</button>
                        <button type="button" class="btn btn-primary btn-sm" ng-click="ok()">OK</button>
                    </div>
                </div>
            </div>
        </div>
      
        <div class="modal fade" id="customConfirmation" tabindex="-1" aria-labelledby="exampleModalLabel" aria-hidden="true">
            <div class="modal-dialog modal-dialog-centered modal-dialog-scrollable">
                <div class="modal-content px-5 py-5">
                    <p class="text-center">Are you sure you want to generate Credit Note?</p>
                    <button ng-click="confirmYes()">Yes</button>
                    <button class="mt-3" ng-click="confirmNo()">No</button>
                </div>
            </div>
        </div>


        <div class="modal fade" id="trialBalanceModal" tabindex="-1" aria-labelledby="exampleModalLabel" aria-hidden="true">
            <div class="modal-dialog modal-xl">
                <div class="modal-content">
                    <div class="modal-header">
                        <h5 class="modal-title" id="exampleModalLabel">Trial Balance</h5>
                        <button type="button" class="btn-close btn-sm" data-bs-dismiss="modal" aria-label="Close"></button>
                    </div>
                    <div class="modal-body">
                        <div class="row">
                            <div class="col-sm-12">
                               <div class="row">
                                    <div class="col-sm-2">
                                        <label><input type="radio" ng-model="radio" value="0" ng-checked="radio==0" ng-change="changeDateRadio()" />&nbsp; By Date</label><br />
                                        <label class="mt-2"><input type="radio" ng-model="radio" value="1" ng-change="changeSaleRadio()" />&nbsp; By Sale</label>
                                    </div>
                                    <div class="col-sm-8">
                                        
                                        <table ng-show="showSalesFilterTable" class="table table-bordered table-sm" style="font-size:15px">
                                            <tr style="background-color:skyblue">
                                                <td>Sl#</td>
                                                <td>Company</td>
                                                <td>Product name</td>
                                                <td>Amount</td>
                                                <td>Sales Date</td>
                                            </tr>
                                            <tbody>
                                                <tr ng-repeat="data in trialBalanceData">
                                                    <td>{{$index + 1}}</td>
                                                    <td>{{data.name}}</td>
                                                    <td>{{data.sbName}}</td>
                                                    <td>{{data.salesPrice | number:2}}</td>
                                                    <td>{{data.sDate}}</td>
                                                </tr>
                                            </tbody>
                                        </table>
                                    </div>
                                    <div class="col-sm-2">
                                        <label>From</label>
                                        <input type="date" class="form-control form-control-sm" ng-model="fromDateForTrial" ng-change="fromDateWise()" ng-disabled="fromDisable"/>
                                        <label>From</label>
                                        <input type="date" class="form-control form-control-sm" ng-model="toDateForTrial" ng-change="toDateWise()" ng-disabled="toDisable"/>
                                    </div>

                                    <div class="col-sm-12">
                                        <div class="pull-left text-left" ng-show="isVisibleDateFilterTable">
                                            <div class="col-sm-12 row">
                                                <div class="col-sm-6">
                                                    Show
                                                    <select id="page" ng-model="itemsPerPage" ng-change="paginationChange()">
                                                        <option value="10">10</option>
                                                        <option value="20">20</option>
                                                        <option value="40">40</option>
                                                        <option value="50" selected>50</option>
                                                        <option value="60">60</option>
                                                        <option value="80">80</option>
                                                        <option value="100">100</option>
                                                        <option value="500">500</option>
                                                        <option value="1000">1000</option>
                                                        <option value="3000">3000</option>
                                                        <option value="5000">5000</option>
                                                        <option value="10000">10000</option>
                                                        <option value="10000000">All</option>
                                                    </select>
                                                    entries per page. (Total:{{totalItems}} data)
                                                </div>
                                                <div class="col-sm-6 d-flex justify-content-end">
                                                    <nav aria-label="...">
                                                        <ul class="pagination">
                                                            <li class="page-item" ng-class="{ disabled: currentPage === 1 }">
                                                                <a class="page-link" href="#" ng-click="setCurrentPage(currentPage - 1)" aria-label="Previous">
                                                                    <span aria-hidden="true">&laquo;</span>
                                                                </a>
                                                            </li>

                                                            <!-- The ng-repeat code you provided -->
                                                            <li class="page-item" ng-repeat="page in getPages()" ng-class="{ active: currentPage === page }">
                                                                <a class="page-link" href="#" ng-click="setCurrentPage(page)">{{ page }}</a>
                                                            </li>

                                                            <li class="page-item" ng-class="{ disabled: currentPage === totalPages }">
                                                                <a class="page-link" href="#" ng-click="setCurrentPage(currentPage + 1)" aria-label="Next">
                                                                    <span aria-hidden="true">&raquo;</span>
                                                                </a>
                                                            </li>
                                                        </ul>
                                                    </nav>
                                                </div>
                                            </div>
                                        </div>
                                    </div>

                                    <div class="mt-3" style="height:300px;overflow-y:auto;white-space:nowrap;">
                                        <table ng-show="showDateFilterTable" class="table table-bordered table-striped table-sm" style="border:2px solid gray">
                                            <tr style="font-weight:bold">
                                                <td>Sl#</td>
                                                <td>Id</td>
                                                <td>Ledger name</td>
                                                <td>Description</td>
                                                <td>Debt</td>
                                                <td>Credit</td>
                                                <td>Date</td>
                                            </tr>
                                            <tbody>
                                                <tr ng-repeat="data in getDateFilterData">
                                                    <td>{{$index + 1}}</td>
                                                    <td>{{data.id}}</td>
                                                    <td>{{data.sbName}}</td>
                                                    <td>{{data.description}}</td>
                                                    <td>{{data.debt | number:2}}</td>
                                                    <td>{{data.credit | number:2}}</td>
                                                    <td>{{data.jDate}}</td>
                                                </tr>
                                            </tbody>
                                        </table>

                                    </div>
                               </div>
                            </div>
                        </div>
                    </div>
                    <div class="modal-footer">
                        <button type="button" class="btn btn-secondary btn-sm" data-bs-dismiss="modal">Close</button>
                        <button type="button" class="btn btn-primary btn-sm" ng-click="ok()">OK</button>
                    </div>
                </div>
            </div>
        </div>

    </div>
</div>

<script>
    var app = angular.module('myApp', []);
    app.controller('myController', function ($scope, $http) {
        angular.element(document).ready(function () {
            $scope.getSalesPerson();
            $scope.billingContact = "0";
            $scope.isVisible = false;
            $scope.isVisibleDelete = false;
            $scope.isVisibleDateFilterTable = false;
            $scope.showSalesFilterTable = true;
            $scope.showDateFilterTable = true;
            $scope.showDeletedTable = false;
            $scope.makeInvoiceBtn = true;
            $scope.deleteBtn = true;
            $scope.updateBtn = true;
            $scope.makeJournalBtn = true;

            $scope.itemsPerPage = '20';
            $scope.maxPageLength = 5;
            $scope.currentPage = 1;
            $scope.totalItems = 0;
            $scope.updateDuration();
            $scope.duration='';
            $scope.radio = '1';
        });

        

        $scope.deleteDate = new Date();
        $scope.fromDateForTrial = new Date();
        $scope.toDateForTrial = new Date();

        $scope.updateDuration = function () {
            var date1 = new Date($scope.fromDate);
            var date2 = new Date($scope.toDate);

            var dif = (date2 - date1) / (1000 * 60 * 60 * 24);
            var m = parseInt(dif / 30);
            var r = dif % 30;

            if (r >= 15)
                m = (m + 1);

            if (m === 0)
                m = m + 1;

            $scope.duration = m.toString();
        };

        $scope.companyList = [];
        $scope.searchCompany = function (startingKey) {
            if (startingKey && startingKey.length > 1) {
                let Url = '';
                if (window.location.hostname == 'localhost')
                    Url = '/Company/GetCompanyListByKey';
                else
                    Url = '/AccountingNew/Company/GetCompanyListByKey';

                $http.get(Url, { params: { startingKey: startingKey } })
                    .then(function (response) {
                        $scope.companyList = response.data;
                    }, function (error) {
                        console.error(error);
                    })
            } else {
                $scope.companyList = [];
            }
        };

        $scope.selectedCompany = null;
        $scope.selectCompany = function (company) {
            sbName = null;
            row = null;

            $scope.selectedCompany = company;
            $scope.company = company.name;
            //$scope.companyList = [];

            $scope.getBillingPerson($scope.comList);
            $scope.getSales($scope.currentPage, $scope.itemsPerPage, $scope.comList, 0);
            //$scope.getDeletedSales($scope.currentPage, $scope.itemsPerPage, $scope.comList);

            $scope.showTable = true;
            $scope.makeInvoiceBtn = false;
        }

        $scope.getBillingPerson = function (cId) {
            let Url = '';
            if (window.location.hostname == 'localhost')
                Url = '/Company/GetContactPersonByCompanyId';
            else
                Url = '/AccountingNew/Company/GetContactPersonByCompanyId';

            $http.get(Url, { params: { companyId: cId } })
                .then(function (response) {
                    $scope.getBillingPersonData = response.data;
                }, function (error) {
                    console.error(error);
                })
        }

        $scope.getSalesPerson = function () {
            let Url = '';
            if (window.location.hostname == 'localhost')
                Url = '/Sale/GetSalesPersonsByProductID';
            else
                Url = '/AccountingNew/Sale/GetSalesPersonsByProductID';
            $http.get(Url, { params: { productID: 2 } })
                .then(function (response) {
                    $scope.salesPersons = response.data;
                    $scope.salesPerson = "0";
                }, function (error) {
                    console.error(error);
                });
        };

        $scope.getSales = function (pageNo, pageSize, cId, tno) {
            let Url = '';
            if (window.location.hostname == 'localhost')
                Url = '/Sale/GetSales';
            else
                Url = '/AccountingNew/Sale/GetSales';

            $http.get(Url, { params: { pageNo: pageNo, pageSize: pageSize, cId: cId, tno: tno } })
                .then(function (response) {
                    $scope.salesData = response.data.sales;
                    $scope.trialBalanceData = response.data;
                    $scope.totalItems = response.data.sales[0].totalRecord;
                    $scope.sumTotalAmount = response.data.totalAmount;
                    $scope.sumDuesAmount = response.data.accReceivale;
                    $scope.isVisible = true;
                    $scope.showDeletedTable = false;
                })
                .catch(function (error) {
                    console.log(error);
                })
        }

        $scope.regularSalesBtn = function () {
            $scope.getSales($scope.currentPage, $scope.itemsPerPage, $scope.comList, 0);
            $scope.isVisible = true;
            $scope.showTable = true;
            $scope.isVisibleDelete = false;
            $scope.showDeletedTable = false;
        }

        $scope.deletedSalesBtn = function () {
            $scope.getDeletedSales(1, $scope.itemsPerPage, $scope.comList);
            $scope.isVisible = false;
            $scope.showTable = false;
            $scope.showDeletedTable = true;
            $scope.isVisibleDelete = true;
        }

        $scope.getDeletedSales = function (pageNo, pageSize, cId) {

            let Url = '';
            if (window.location.hostname == 'localhost')
                Url = '/Sale/GetDeletedSales';
            else
                Url = '/AccountingNew/Sale/GetDeletedSales';

            $http.get(Url, { params: { pageNo: pageNo, pageSize: pageSize, cId: cId } })
                .then(function (response) {
                    $scope.deletedSalesData = response.data;
                    $scope.totalItems = response.data[0].totalRows;
                    $scope.sumTotalPrice = response.data.reduce((a, b) => a + b.totalPrice, 0);
                    $scope.sumTotalVat = response.data.reduce((a, b) => a + b.totalVat, 0);
                })
                .catch(function (error) {
                    console.log(error);
                })
        }



        $scope.$watch('totalItems', function () {
            $scope.calculatePages();
        });

        $scope.$watch('itemsPerPage', function () {
            $scope.calculatePages();
        });

        $scope.$watch('currentPage', function () {
            if ($scope.currentPage > 1) {
                $scope.calculatePages();
                $scope.getSales($scope.currentPage, $scope.itemsPerPage, $scope.comList, 0);
            }
            else {
                $scope.calculatePages();
            }

        });

        $scope.calculatePages = function () {
            $scope.totalPages = Math.ceil($scope.totalItems / $scope.itemsPerPage);
            $scope.pages = [];

            var startPage = Math.max(1, $scope.currentPage - Math.floor($scope.maxPageLength / 2));
            var endPage = Math.min($scope.totalPages, startPage + $scope.maxPageLength - 1);

            for (var i = startPage; i <= endPage; i++) {
                $scope.pages.push(i);
            }
        };

        $scope.getPages = function () {
            return $scope.pages || [];
        };

        $scope.setCurrentPage = function (page) {
            if (page >= 1 && page <= $scope.totalPages) {
                $scope.currentPage = page;
            }
        };

        var sbName;
        var row;
        $scope.selectRegularRow = function (row, rowIndex) {
            $scope.selectedRow = row;
            $scope.selectedRowIndex = rowIndex;
            $scope.salesPrice = $scope.selectedRow.salesPrice;
            $scope.vatAmount = $scope.selectedRow.tax;
            $scope.fromDate = new Date($scope.selectedRow.from);
            $scope.toDate = new Date($scope.selectedRow.to);
            $scope.duration = $scope.selectedRow.duration;
            $scope.salesPerson = $scope.selectedRow.salesPerson.toString();
            $scope.billingContact = $scope.selectedRow.billContactId.toString();

            if ($scope.selectedRow.posted == 0)
                $scope.makeJournalBtn = false;
            else
                $scope.makeJournalBtn = true;

            if (sbName != "" && sbName != null) {
                var sb = {
                    Sl: $scope.selectedRowIndex,
                    Name: $scope.selectedRow.sbName,
                    SId: $scope.selectedRow.id,
                    Tno: $scope.selectedRow.tno
                };
                if (sb.Sl != $scope.selectedRowIndex) {
                    if (sb.Name != sbName.Name || sb.SId != sbName.sid) {
                        //$("#view").hide();
                        updateSelectedRowIndex(row, sbName.Name, sb.Name, sbName.SId, sb.SId, sb.Tno);
                    }
                    sbName = {
                        Sl: $scope.selectedRowIndex,
                        Name: $scope.selectedRow.sbName,
                        SId: $scope.selectedRow.id,
                        Tno: $scope.selectedRow.tno
                    };
                    row = $scope.selectedRow;
                }
            } else {
                sbName = {
                    Sl: $scope.selectedRowIndex,
                    Name: $scope.selectedRow.sbName,
                    SId: $scope.selectedRow.id,
                    Tno: $scope.selectedRow.tno
                };
                row = $scope.selectedRow;
            }

            $scope.deleteBtn = false;
            $scope.updateBtn = false;


        }

        $scope.updateSelectedRowIndex = function (rowNum, oldName, newName, oldSid, newSid, tno) {
           
            var confirmResult = confirm('You have changed product name.\nDo you want to change the product for this sale?');

            if (!confirmResult)
                return false;

            if (confirmResult) {
                var json3 = {
                    OldSid: oldSid,
                    Tno: tno,
                    NewSid: newSid
                };

                let Url = '';
                if (window.location.hostname == 'localhost')
                    Url = '/Sale/UpdateProduct';
                else
                    Url = '/AccountingNew/Sale/UpdateProduct';

                $http.post(Url, JSON.stringify(json3), { headers: { 'Content-Type': 'application/json' } })
                    .then(function (response) {
                        if (response.data === 'Success') {
                            alert("The product has been changed successfully.");
                        }
                    });
            } else {
                // rowNum.find('td:nth-child(2)').html(oldName);
                // rowNum.find('td:nth-child(13)').html(oldSid);
                $scope.selectedRow.name = $scope.sbName.Name;
                $scope.selectedRow.id = $scope.sbName.SId;
            }

            return true;
        };

        $scope.makeInvoice = function () {
            $scope.cid = ($scope.selectedCompany.id).toString();
            if ($scope.cid != null) {
                window.open('.././Invoice/MakeInvoice?companyId=' + $scope.cid);

            }
        }

        $scope.delete = function () {
            if ('@accessRights.Contains("3")' !== 'True') {
                alert('Sorry, you have no access to delete a record.');
            } else {
                var result = confirm('Are you sure you want to delete this sale?');
                if (result) {
                    $("#deletedReasonModal").modal('show');
                } else {
                    // User clicked 'Cancel', do nothing or handle accordingly
                }
            }
        }

        $scope.finalDelete = function () {
            if (!$scope.deleteDate) {
                alert('Please give sale delete date.');
                return false;
            }

            // Hide the deletedReasonModal if it's currently shown
            $('#deletedReasonModal').modal('hide');

            // Show the customConfirmation modal
            $('#customConfirmation').modal('show');

            // Define confirmYes function within the scope
            $scope.confirmYes = function () {
                $('#customConfirmation').modal('hide');
                deleteSale(1);
            };

            // Define confirmNo function within the scope
            $scope.confirmNo = function () {
                $('#customConfirmation').modal('hide');
                deleteSale(0);
            };
        };






        function deleteSale(CNote) {
            var tno = $scope.selectedRow.tno;
            var deleteReason = $scope.reason;
            var deleteDate = $scope.deleteDate;

            var Url = window.location.hostname == 'localhost' ? '/Sale/DeleteSale' : '/AccountingNew/Sale/DeleteSale';

            $http.get(Url, {
                params: {
                    tno: tno,
                    deleteReason: deleteReason,
                    creditNote: CNote,
                    deleteDate: deleteDate
                }
            })
                .then(function (response) {
                    var data = response.data;
                    if (data == "1") {
                        alert('Can not delete. Cash has been collected for this sale. You must delete that Cash from Cash Collection form, then delete this sale.');
                    } else if (data == "2") {
                        alert('Can not delete. Some of Sales journal is approved.');
                    } else if (data == "-1") {
                        alert('Internal Database Error.');
                    } else if (data == "0") {
                        alert('Delete operation has been completed successfully.');
                        $scope.deletedate = '';
                        $scope.deleteReason = '';
                        $('#deletedReasonModal').modal('hide');
                        $scope.getSales(1, $scope.itemsPerPage, $scope.comList, 0);
                    }
                })
                .catch(function (error) {
                    console.log(error);
                });
        }

        $scope.update = function () {
            if ('@accessRights.Contains("2")' !== "True") {
                alert("Sorry, You have no permission to update a record.");
            }
            else {
                $scope.amountCheck();
            }
        }
        $scope.amountCheck = function () {
            if ($scope.salesPrice === '' || $scope.salesPrice === 0) {
                let isConfirmed = confirm("You have given no amount. Do you treat this product as free?");
                if (isConfirmed) {
                    $scope.taxCheck();
                }
            } else {
                $scope.taxCheck();
            }
        };
        $scope.taxCheck = function () {
            if ($scope.vatAmount === '' || $scope.vatAmount === 0) {
                let isConfirmed = confirm('You have given no VAT amount. Do you treat this product has no VAT?');
                if (isConfirmed) {
                    $scope.dateCheck();
                }
            } else {
                $scope.dateCheck();
            }
        }
        $scope.dateCheck = function () {
            let datefrom = new Date($scope.fromDate);
            let dateto = new Date($scope.toDate);
            if (datefrom > dateto) {
                alert("From-date is greater than To-date.");
            } else {
                $scope.contactPersonCheck();
            }
        }
        $scope.contactPersonCheck = function () {
            if ($scope.billingContact === '' || $scope.billingContact === null) {
                alert("You must select a billing contact person.");
            } else {
                $scope.updateSale();
            }
        }



        $scope.updateSale = function () {
            var sid = $scope.selectedRow.id;
            var vatId = $scope.selectedRow.taxId;
            var description = "Company: " + $scope.selectedCompany.name + ", Item: " + $scope.selectedRow.sbName;

            var oldAmount = parseFloat($scope.selectedRow.salesPrice);
            var newAmount = parseFloat($scope.salesPrice);

            var oldVatAmount = parseFloat($scope.selectedRow.tax);
            var newVatAmount = parseFloat($scope.vatAmount);

            var oldDuration = parseInt($scope.selectedRow.duration);
            var newDuration = parseInt($scope.duration);

            var oldRefNo = $scope.selectedRow.refNo;
            var newRefNo = $scope.refNo == undefined ? "" : $scope.refNo;

            var tno = $scope.selectedRow.tno;
            var AR = parseFloat(newAmount + newVatAmount);
            $scope.formattedFromDate = $scope.fromDate.toISOString().split('T')[0];
            var dtp = $scope.formattedFromDate;
            $scope.formattedToDate = $scope.toDate.toISOString().split('T')[0];
            var dtp2 = $scope.formattedToDate;
            var posted = $scope.selectedRow.posted ? 'Yes' : 'No';
            if (oldAmount != newAmount || oldVatAmount != newVatAmount || oldDuration != newDuration) {

                let Url = '';
                if (window.location.hostname == 'localhost')
                    Url = '/Sale/GetNumberOfId';
                else
                    Url = '/AccountingNew/Sale/GetNumberOfId';
                $http.get(Url, { params: { tno: tno } })
                    .then(function (response) {
                        if (response.data.first > 0) {
                            alert("Can not update.\nCash has been collected for this sale. You must delete that Cash from Cash Collection form, then update this sale.");

                        } else if (response.data.Second > 0) {
                            alert("Can not update.\nThe Sales journal is approved.");

                        } else {
                            var isConfirmed = confirm("Are you sure to update the change amount of the Sale?");
                            if (isConfirmed) {
                                let requestBodyModel = {
                                    SalesPrice: newAmount.toString(),
                                    AccReceivable: AR.toString(),
                                    Duration: newDuration.toString(),
                                    Tax: newVatAmount.toString(),
                                    StartDate: dtp,
                                    EndDate: dtp2,
                                    Tno: tno,
                                    ContactId: $scope.billingContact,
                                    RefNo: newRefNo,
                                    SalesPerson: $scope.salesPerson
                                };
                                let Url = '';
                                if (window.location.hostname == 'localhost')
                                    Url = '/Sale/UpdateSaleInfo';
                                else
                                    Url = '/AccountingNew/Sale/UpdateSaleInfo';
                                $http.post(Url, JSON.stringify(requestBodyModel), { headers: { 'Content-Type': 'application/json' } })
                                    .then(function (response) {
                                        if (response.data == 'Success') {
                                            if (posted == 'Yes') {
                                                var user = @userId
                                                        var userId = user.toString();
                                                let requestBodyModel2 = {
                                                    sid: $scope.selectedRow.id.toString(),
                                                    vatId: $scope.selectedRow.taxId.toString(),
                                                    tno: tno,
                                                    oldDuration: oldDuration.toString(),
                                                    newDuration: newDuration.toString(),
                                                    oldAmount: oldAmount.toString(),
                                                    newAmount: newAmount.toString(),
                                                    oldVatAmount: oldVatAmount.toString(),
                                                    newVatAmount: newVatAmount.toString(),
                                                    fromDate: dtp,
                                                    description: description,
                                                    userId: userId,
                                                    sPerson: $scope.salesPerson
                                                }

                                                let Url = '';
                                                if (window.location.hostname == 'localhost')
                                                    Url = '/Journal/UpdateSalesJournal';
                                                else
                                                    Url = '/AccountingNew/Journal/UpdateSalesJournal';
                                                $http.post(Url, JSON.stringify(requestBodyModel2), { headers: { 'Content-Type': 'application/json' } })
                                                    .then(function (response) {
                                                        if (response.data == "Success") {
                                                            $scope.forTrialBalance($scope.selectedRow.tno);
                                                        }
                                                    });
                                            } else {
                                                var isPostConfirmed = confirm("Update completed successfully.\nYou must post this entry to the Journal. Do you want to post this now?");
                                                if (isPostConfirmed) {

                                                    var user = @userId
                                                            var userId = user.toString();
                                                    let requestBodyModel3 = {
                                                        SId: $scope.selectedRow.id.toString(),
                                                        Amount: newAmount.toString(),
                                                        JDate: dtp,
                                                        Duration: newDuration.toString(),
                                                        TNO: tno,
                                                        Description: description,
                                                        SalesDate: dtp,
                                                        TaxId: $scope.selectedRow.taxId.toString(),
                                                        Tax: newVatAmount.toString(),
                                                        UserId: userId
                                                    };

                                                    let Url = '';
                                                    if (window.location.hostname == 'localhost')
                                                        Url = '/Sale/UpdateSalePosted';
                                                    else
                                                        Url = '/AccountingNew/Sale/UpdateSalePosted';

                                                    $http.post(Url, JSON.stringify(requestBodyModel3), { headers: { 'Content-Type': 'application/json' } })
                                                        .then(function (response) {
                                                            if (response.data == 'Success') {
                                                                $scope.forTrialBalance($scope.selectedRow.tno);
                                                            }
                                                        });
                                                }
                                            }
                                        }
                                    });
                                //$("#companyList").trigger('change');
                            }
                        }
                    })
                    .catch(function (error) {
                        console.log(error);
                    });
            }
            else {
                var sb = {
                    Sl: $scope.selectedRowIndex,
                    Name: $scope.selectedRow.sbName,
                    SId: $scope.selectedRow.id,
                    Tno: $scope.selectedRow.tno
                };

                if (sb.Name !== sbName.Name || sb.SId !== sbName.SId) {
                    //$scope.view = false;

                    var isConfirmed = confirm('You have changed the product name.\nDo you want to change the product for this sale?');
                    if (isConfirmed) {
                        var json = {
                            OldSid: sbName.SId.toString(),
                            Tno: sb.Tno,
                            NewSid: sb.SId.toString()
                        };

                        let Url = '';
                        if (window.location.hostname == 'localhost')
                            Url = '/Sale/UpdateProduct';
                        else
                            Url = '/AccountingNew/Sale/UpdateProduct';

                        $http.post(Url, JSON.stringify(json), { headers: { 'Content-Type': 'application/json' } })
                            .then(function (response) {
                                if (response.data === 'Success') {
                                    alert('The product has been changed successfully.');
                                }
                            });
                    } else {
                        $scope.selectedRow.name = $scope.sbName.Name;
                        $scope.selectedRow.id = $scope.sbName.SId;
                    }
                    $scope.sbName = {
                        Sl: $scope.selectedRow.Sl,
                        Name: $scope.selectedRow.Name,
                        SId: $scope.selectedRow.id,
                        Tno: $scope.selectedRow.Tno
                    };
                    $scope.row = $scope.selectedRow;
                    return;
                }
                if ($scope.selectedRow.billContactId.toString() !== $scope.billingContact ||
                    $scope.selectedRow.refNo !== oldRefNo ||
                    $scope.selectedRow.salesPerson.toString() !== $scope.salesPerson) {

                    var json2 = {
                        PersonId: $scope.billingContact,
                        RefNo: newRefNo,
                        SalesPerson: $scope.salesPerson,
                        Tno: tno
                    };

                    let Url = '';
                    if (window.location.hostname == 'localhost')
                        Url = '/Sale/UpdateSaleContactPersonAndRefNo';
                    else
                        Url = '/AccountingNew/Sale/UpdateSaleContactPersonAndRefNo';

                    $http.post(Url, JSON.stringify(json2), { headers: { 'Content-Type': 'application/json' } })
                        .then(function (response) {
                            if (response.data === 'Update successful') {
                                alert('Update Sales successfully.');
                                //$("#companyList").trigger('change');
                            }
                        });
                } else {
                    alert('There are no changes to update.');
                }
            }
        };

        $scope.forTrialBalance = function (tnoNo) {
            var isConfirmed = confirm("All Journal entries have been completed.\nDo you want to view these Journals now?");
            if (isConfirmed) {
                $("#trialBalanceModal").modal('show');
                $scope.getSales('1', '100', 0, $scope.selectedRow.tno);
                $scope.getDateFilterData = [];
                $scope.fromDisable = true;
                $scope.toDisable = true;
            } else {
                return false;
            }
        };

        $scope.makeJournal = function () {
            if ('@accessRights.Contains("1")' !== "True") {
                alert("Sorry, You have no permission to update a record.");
            } else {
                var isConfirmed = confirm("Are you sure you want to make journal of this sale?");
                if (isConfirmed) {
                    $("#makeJournalModal").modal('show');
                } else {
                    return false;
                }
            }
        }

        $scope.getJournals=function(pageNo, pageSize, tno, from, end){
            $scope.from = new Date(from);
            $scope.end = new Date(end);
            $scope.formatedFromDateForTrial = $scope.from.toISOString().split('T')[0];
            $scope.FromatedToDateForTrial = $scope.end.toISOString().split('T')[0];
            var json3 = {
                PageNo: pageNo.toString(),
                PageSize: pageSize,
                Tno: tno,
                FromDate: $scope.formatedFromDateForTrial,
                EndDate: $scope.FromatedToDateForTrial
            };

            let Url = '';
            if (window.location.hostname == 'localhost')
                Url = '/Journal/GetJournalsForTrialBalance';
            else
                Url = '/AccountingNew/Journal/GetJournalsForTrialBalance';

            $http.post(Url, JSON.stringify(json3), { headers: { 'Content-Type': 'application/json' } })
                .then(function (response) {
                    $scope.getDateFilterData = response.data;
                    $scope.totalItems = response.data[0].totalRecord;
                    $scope.isVisibleDateFilterTable = true;
                });
        }

        $scope.fromDateWise = function () {
            $scope.getJournals($scope.currentPage, $scope.itemsPerPage, '-1', $scope.fromDateForTrial, $scope.toDateForTrial);
        }

        $scope.toDateWise = function () {
            $scope.getJournals($scope.currentPage, $scope.itemsPerPage, '-1', $scope.fromDateForTrial, $scope.toDateForTrial);
        }
        
        $scope.changeDateRadio = function () {
            $scope.getJournals($scope.currentPage, $scope.itemsPerPage, '-1', $scope.fromDateForTrial, $scope.toDateForTrial);
            $scope.trialBalanceData = [];
            $scope.fromDisable = false;
            $scope.toDisable = false;
        }

        $scope.changeSaleRadio = function () {
            $scope.getSales('1', '100', 0, $scope.selectedRow.tno);
            $scope.getDateFilterData = [];
            $scope.fromDisable = true;
            $scope.toDisable = true;
        }

        $scope.paginationChange = function () {
            $scope.getJournals($scope.currentPage, $scope.itemsPerPage, '-1', $scope.fromDateForTrial, $scope.toDateForTrial);
        }
    });
</script>