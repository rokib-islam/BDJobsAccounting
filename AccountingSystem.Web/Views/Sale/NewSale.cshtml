@using Microsoft.AspNetCore.Http

@{
    ViewData["Title"] = "NewSale";
    var userId = Context.Session.GetInt32("UserID");
    var accessRight = Context.Session.GetString("AccessRight");
    var accessRights = accessRight.Split(',');
    
}

<style>
    .headingSpace {
        margin-top: -10px;
        margin-bottom: -10px
    }
</style>

<h3 class="text-center alert-primary" style="margin-top:-10px">New Sale</h3>
<div ng-app="myApp">
    <div ng-controller="myController">
        <div class="col-sm-12" style="padding-left:10px;padding-right:10px">
            <div class="row">
                <div class="col-sm-6">
                    <div class="form-group row">
                        <label class="col-sm-3 col-form-label">Company</label>
                        <div class="col-sm-9">
                            <input class="form-control form-control-sm" id="company" placeholder="Search Company Here" autocomplete="off" ng-model="searchQuery" ng-keyup="searchCompany(searchQuery)">
                            <select class="form-control form-control-sm" size="10" id="companyList" ng-model="comList" style="position:absolute;z-index:999;width: 200px; overflow:auto ;background: white none repeat scroll 0% 0%;" ng-show="companyList.length > 0">
                                <option ng-repeat="company in companyList" value="{{company.id}}" ng-click="selectCompany(company)">{{company.name}}</option>
                            </select>
                        </div>
                    </div>
                    <div class="mt-4" style="border:1px solid lightgray;padding:10px">
                        <div class="text-left fw-bold headingSpace">Sales Information :</div>
                        <div class="form-group row mt-4">
                            <label class="col-sm-4 col-form-label">Sales Price</label>
                            <div class="col-sm-8">
                                <input type="number" class="form-control form-control-sm" ng-model="salesPrice" ng-change="updateTableValues()" />
                            </div>
                        </div>
                        <div class="form-group row">
                            <label class="col-sm-4 col-form-label">Tax Type</label>
                            <div class="col-sm-8">
                                <select class="form-control form-control-sm" ng-model="taxType" ng-change="taxTypeAmountDisable()">
                                    <option value="0">Select</option>
                                    <option ng-repeat="o in taxTypes" value="{{o.id}}">{{o.sbname}}</option>
                                </select>
                            </div>
                        </div>
                        <div class="form-group row">
                            <label class="col-sm-4 col-form-label">Amount</label>
                            <div class="col-sm-8">
                                <input type="number" class="form-control form-control-sm" ng-model="amount" ng-change="updateTableValues()" ng-disabled="amountDisable" />
                            </div>
                        </div>
                        <div class="form-group row">
                            <label class="col-sm-4 col-form-label">Job Title</label>
                            <div class="col-sm-8">
                                <select class="form-control form-control-sm" ng-model="jobTitle">
                                    <option>Select</option>
                                </select>
                            </div>
                        </div>
                        <div class="form-group row">
                            <label class="col-sm-4 col-form-label">Billing Person</label>
                            <div class="col-sm-8">
                                <select class="form-control form-control-sm" ng-model="billingPerson" ng-change="loadDesignation()">
                                    <option value="0" selected>Select</option>
                                    <option ng-repeat="o in getBillingPerson" value="{{o.id}}">{{o.name}}</option>
                                </select>
                            </div>
                        </div>
                        <div class="form-group row">
                            <label class="col-sm-4 col-form-label">Designation</label>
                            <div class="col-sm-8">
                                <input type="text" class="form-control form-control-sm" ng-model="designation" />
                            </div>
                        </div>
                        <div class="form-group row" hidden>
                            <label class="col-sm-4 col-form-label">Workshop Date</label>
                            <div class="col-sm-8">
                                <input class="form-control form-control-sm" ng-model="workshopDate" />
                            </div>
                        </div>
                        <div class="form-group row">
                            <label class="col-sm-4 col-form-label">Reference No</label>
                            <div class="col-sm-8">
                                <input class="form-control form-control-sm" ng-model="referenceNo" />
                            </div>
                        </div>
                        <div class="form-group row">
                            <label class="col-sm-4 col-form-label">Sales Person</label>
                            <div class="col-sm-8">
                                <select class="form-control form-control-sm" ng-model="salesPerson">
                                    <option value="0" selected>select</option>
                                    <option ng-repeat="o in salesPersons" value="{{o.salesPersonID}}">{{o.salesPersonName}}</option>
                                </select>
                            </div>
                        </div>
                        <div>
                            <label>Comments</label>
                            <textarea class="form-control form-control-sm" ng-model="comments"></textarea>
                        </div>
                        <div class="row mt-2">
                            <div class="col-sm-6 d-flex justify-content-end">
                                <button class="btn btn-success btn-sm px-5" ng-disabled="disableSaveButton" ng-click="save()">Save</button>
                            </div>
                            <div class="col-sm-6">
                                <button class="btn btn-primary btn-sm px-4">Make Invoice</button>
                            </div>
                        </div>
                    </div>

                </div>
                <div class="col-sm-6">
                    <div class="form-group row">
                        <label class="col-sm-3 col-form-label">Product Name</label>
                        <div class="col-sm-9">
                            <select class="form-control form-control-sm" ng-model="productName">
                                <option value="0" selected>List of Products</option>
                                <option ng-repeat="o in products" value="{{o.id}}">{{o.ladgerName}}</option>
                            </select>
                        </div>
                    </div>

                    <div class="mt-4" style="border:1px solid lightgray;padding:10px">
                        <div class="text-left fw-bold headingSpace">This Product is valid for :</div>
                        <div class="row mt-4">
                            <div class="col-sm-6">
                                <label>
                                    <label><input name="duration" ng-model="radioValue" ng-change="updateDuration()" value="1" type="radio" checked>&nbsp; One/less than one month</label>
                                </label>
                            </div>
                            <div class="col-sm-6">
                                <div class="form-group row">
                                    <label class="col-sm-3 col-form-label">From</label>
                                    <div class="col-sm-9">
                                        <input ng-model="dateFrom" ng-change="updateDuration()" class="form-control form-control-sm" type="date">
                                    </div>
                                </div>
                            </div>
                        </div>
                        <div class="row">
                            <div class="col-sm-6">
                                <label>
                                    <input name="duration" ng-model="radioValue" ng-change="updateDuration()" value="2" type="radio">&nbsp; more than one month
                                </label><br />
                                Duration
                                <input ng-model="month" maxlength="2" size="2" readonly style="text-align: center;" ng-disabled="radioValue !== '2'"> months
                            </div>
                            <div class="col-sm-6">
                                <div class="form-group row">
                                    <label class="col-sm-3 col-form-label">To</label>
                                    <div class="col-sm-9">
                                        <input ng-model="dateTo" ng-change="updateDuration()" class="form-control form-control-sm" type="date" ng-disabled="radioValue !== '2'">
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>


                    <div class="mt-3" style="border:1px solid lightgray;padding:10px">
                        <div class="text-left fw-bold headingSpace">Invoice scheduling :</div>
                        <div class="row mt-4">
                            <div class="col-sm-6">
                                <label>No. fo invoice(s) would be created</label>
                            </div>
                            <div class="col-sm-6">
                                <input type="number" class="form-control form-control-sm text-right" ng-model="invoiceNo" ng-change="generateRows()">
                            </div>
                        </div>
                        <div>Give the schedule</div>
                        <div class="mt-2">
                            <table class="table table-bordered table-sm" style="height:150px;">
                                <thead>
                                    <tr>
                                        <th>SL No</th>
                                        <th>SDate</th>
                                        <th>Amount</th>
                                        <th>VAT</th>
                                    </tr>
                                </thead>
                                <tbody>
                                    <tr ng-repeat="row in rows">
                                        <td>{{$index+1}}</td>
                                        <td><input type="date" ng-model="row.sDate" class="form-control form-control-sm" /></td>
                                        <td>{{row.salesPrice}}</td>
                                        <td>{{row.taxAmount}}</td>
                                    </tr>
                                </tbody>
                            </table>
                        </div>
                    </div>
                </div>
            </div>
        </div>



        <div class="modal fade" id="closejournal" tabindex="-1" aria-labelledby="exampleModalLabel" aria-hidden="true">
            <div class="modal-dialog">
                <div class="modal-content">
                    <div class="modal-header">
                        <h5 class="modal-title" id="exampleModalLabel">Journal Date</h5>
                        <button type="button" class="btn-close btn-sm" data-bs-dismiss="modal" aria-label="Close"></button>
                    </div>
                    <div class="modal-body">
                        <div class="row px-5">
                            <p class="text-center">Give the journal date.</p>
                            <input type="date" ng-model="journalDate" class="col-sm-8 offset-2 form-control form-control-sm" />
                        </div>
                    </div>
                    <div class="modal-footer">
                        <button type="button" class="btn btn-secondary btn-sm" data-bs-dismiss="modal">Close</button>
                        <button type="button" class="btn btn-primary btn-sm" ng-click="ok()">OK</button>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>
<script src="https://ajax.googleapis.com/ajax/libs/angularjs/1.7.9/angular.min.js"></script>
<link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/4.5.2/css/bootstrap.min.css">
<script>
    var app = angular.module('myApp', []);
    app.controller('myController', function ($scope, $http) {
        angular.element(document).ready(function () {
            $scope.salesPerson = '0';
            $scope.productName = '0';
            $scope.billingPerson = '0';
            $scope.taxType = '0';
            $scope.month = '1';
            $scope.invoiceNo = 0;
            $scope.amountDisable = true;
            $scope.getSalesPerson();
            $scope.getTaxType();
            $scope.getProducts();
            $scope.disableSaveButton = true;
        });
        $scope.dateFrom = new Date();
        $scope.dateTo = new Date();

        $scope.taxTypeAmountDisable = function () {
            if ($scope.taxType == '0') {
                $scope.amountDisable = true;
            } else {
                $scope.amountDisable = false;
            }
        };

        $scope.radioValue = "1";
        $scope.updateDuration = function () {
            var date1 = new Date($scope.dateFrom);
            var date2 = new Date($scope.dateTo);

            var dif = (date2 - date1) / (1000 * 60 * 60 * 24);
            var m = parseInt(dif / 30);
            var r = dif % 30;

            if (r >= 15)
                m = (m + 1);

            if (m === 0)
                m = m + 1;

            $scope.month = m.toString();
        };


        $scope.companyList = [];
        $scope.selectedCompany = null;

        $scope.searchCompany = function (startingKey) {
            if (startingKey && startingKey.length > 1) {
                $http.get('/Company/GetCompanyListByKey', { params: { startingKey: startingKey } })
                    .then(function (response) {
                        $scope.companyList = response.data;
                    }, function (error) {
                        console.error(error);
                    })
            } else {
                $scope.companyList = [];
            }
        };

        $scope.selectCompany = function (company) {
            $scope.selectedCompany = company;
            $scope.searchQuery = company.name;
            $scope.companyList = [];

            $scope.setOption();
            $scope.disableSaveButton = false;
        }

        $scope.getSalesPerson = function () {
            $http.get('/Sale/GetSalesPersonsByProductID', { params: { productID: 2 } })
                .then(function (response) {
                    $scope.salesPersons = response.data;
                }, function (error) {
                    console.error(error);
                });
        };

        $scope.setOption = function () {
            $scope.getBillingPerson();
            $scope.getJobTitle();
        }

        $scope.getBillingPerson = function () {
            $http.get('/Company/GetContactPersonsOrJobTitle', { params: { type: 'C', cId: $scope.comList } })
                .then(function (response) {
                    $scope.getBillingPerson = response.data;
                }, function (error) {
                    console.error(error);
                })
        }

        $scope.loadDesignation = function () {
            var selectedBillingPerson = $scope.getBillingPerson.find(function (person) {
                return person.id == $scope.billingPerson;
            });

            if (selectedBillingPerson) {
                $scope.designation = selectedBillingPerson.designation;
            } else {
                $scope.designation = '';
            }
        };

        $scope.getJobTitle = function () {
            $http.get('/Company/GetContactPersonsOrJobTitle', { params: { type: 'T', cId: $scope.comList } })
                .then(function (response) {
                    $scope.jobTitle = response.data;
                }, function (error) {
                    console.error(error);
                })
        }

        $scope.getTaxType = function () {
            $http.get('/Ledger/GetProducts', { params: { admin: 0, account: 0, groupname: " ", isAll: " ", isI: " ", isVatType: 1 } })
                .then(function (response) {
                    $scope.taxTypes = response.data.filter(function (item) {
                        return item.id === 672 && item.sbname === 'VAT (AP)'
                    });
                }, function (error) {
                    console.error(error);
                })
        }

        $scope.getProducts = function () {
            $http.get('/Ledger/GetProducts', { params: { admin: 0, account: 0, groupname: "Revenue", isAll: "", isI: "I", isVatType: 0 } })
                .then(function (response) {
                    $scope.products = response.data;
                }, function (error) {
                    console.error(error);
                })
        }

        $scope.rows = [];

        $scope.generateRows = function () {
            var numRows = parseInt($scope.invoiceNo) || 0;
            $scope.rows = [];

            for (var i = 0; i < numRows; i++) {
                var newRow = {
                    sDate: new Date(),
                    salesPrice: $scope.salesPrice,
                    taxAmount: $scope.amount
                };
                $scope.rows.push(newRow);
            }
        };

        $scope.updateTableValues = function () {
            // Set invoiceNo to 1 by default if it's not already set
            if (!$scope.invoiceNo) {
                $scope.invoiceNo = 1;
                $scope.generateRows(); // Update rows based on the new invoiceNo
            }

            angular.forEach($scope.rows, function (row) {
                row.salesPrice = $scope.salesPrice;
                row.taxAmount = $scope.amount;
            });
        };

        $scope.save = function () {
            debugger
            var enteredCompanyName = $scope.searchQuery.trim();
            if (enteredCompanyName !== $scope.selectedCompany.name.trim()) {
                confirm("The Entered Company doesn't exist. Do you want to continue?");
            }
            var isConfirmedSale = confirm('Are you sure to make a new sale ?');
            if (isConfirmedSale) {

                // $scope.total = 0.00;
                // for (var i = 0; i < $scope.rows.length; i++) {
                //     if ($scope.rows[i].sDate !== "") {
                //         $scope.total += parseFloat($scope.rows[i].salesPrice) + parseFloat($scope.rows[i].taxAmount);
                //     }
                // }
                var access = '@accessRights.Contains("1")';
                if (access == 'False') {
                    alert("Sorry, You have no permission to insert a record.");
                }
                else if ($scope.radioValue == '2' && $scope.dateFrom >= $scope.dateTo) {
                    alert("'From date' should not be greater than or equal to 'To date'");
                }
                else if ($scope.rows.length <= 0) {
                    alert("You must fulfill Schedule of Invoice first, then save this sales information.");
                }
                // else if (parseFloat($scope.total) !== parseFloat(parseFloat($scope.salesPrice) + $scope.taxAmount)) {
                //     alert("The total amount of the invoice scheduler is not equal to the sales price.");
                // }
                else if ($scope.billingPerson == "" || $scope.billingPerson == 0) {
                    alert("You must give the name of 'Billing Person'.");
                }
                else if ($scope.salesPerson == 0 || $scope.salesPerson == "") {
                    alert("You must select a 'Sales Person'.");
                }
                // else if ($scope.taxType != '0' && parseFloat($scope.rows[0].taxAmount) === 0 || $scope.rows[0].taxAmount == undefined) {
                //     alert("You must give the 'VAT Amount'.");
                // }

                else {
                    $("#closejournal").modal('show');
                }
            }
        };

        $scope.ok = function () {
            debugger            
            let requestBodyModel = {
                UserId: @userId,
                CId: $scope.searchQuery || 0,
                PCode: $scope.productName,
                // FromDate: $scope.dateFrom,
                // ToDate: $scope.dateTo ? $scope.dateTo : "",
                // JournalDate: $scope.journalDate,
                SalesPrice: $scope.salesPrice,
                BillingPerson: $scope.billingPerson,
                Designation: $scope.designation,
                Comment: $scope.comments,
                Duration: $scope.month,
                NoOfInvoice: $scope.invoiceNo,
                RefNo: $scope.referenceNo,
                TypeId: $scope.taxType,
                Vat: $scope.amount,
                // jpId: $scope.jobId ? $scope.jobId : 0,
                // jobTitle: $scope.jobTitle,
                // workshopDate: $scope.workshopdateDiv ? $scope.workshopdate : "",
                SPerson: $scope.salesPerson
            };
            $http.post('/Sale/Save', JSON.stringify(requestBodyModel), { headers: { 'Content-Type': 'application/json' } })
                .then(function (response) {
                    debugger
                    if (response.data === "success") {
                        alert('All information has been saved successfully.');
                    } else {
                        alert(response.data);
                    }
                }, function (error) {
                    console.error(error);
                })
        };



    });
</script>


