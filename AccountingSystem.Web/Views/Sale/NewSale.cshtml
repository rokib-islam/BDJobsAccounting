@using Microsoft.AspNetCore.Http

@{
    ViewData["Title"] = "NewSale";
    var userId = Context.Session.GetInt32("UserID");
    var accessRight = Context.Session.GetString("AccessRight");
    //var accessRights = accessRight.Split(',');
    //var onlineJobId = ViewBag.OnlineJobId;
    var onlineJobId = 0;
    if (ViewBag.OnlineJobId == null)
    {
        onlineJobId = 0;
    }
    else
    {
        onlineJobId = ViewBag.OnlineJobId;
    }


    var onlineledger = 0;
    var onlineLedgerId = ViewBag.OnlineLedgerId;
    if (onlineLedgerId == null)
    {
        onlineledger = 0;
    }
    else
    {
        onlineledger = onlineLedgerId;
    }


    var onlineCompanyId = ViewBag.OnlineCompanyId;
    var onlineCompany = 0;
    if (onlineCompanyId == null)
    {
        onlineCompany = 0;
    }
    else
    {
        onlineCompany = onlineCompanyId;
    }

    var accessRights = new string[0];

    if (string.IsNullOrEmpty(accessRight))
    {
                                            <script type="text/javascript">
                                                window.location.href = '@Url.Action("Index", "Home")';
                                            </script>
    }
    else
    {
        accessRights = accessRight.Split(',');
    }

}

<style>
    .headingSpace {
        margin-top: -10px;
        margin-bottom: -10px
    }
</style>

<h3 class="text-center alert-primary" style="margin-top:-10px">New Sale</h3>
<div ng-app="myApp">
    <div ng-controller="myController">
        <div class="col-sm-12" style="padding-left:10px;padding-right:10px">
            <div class="row">
                <div class="col-sm-6">
                    <div class="form-group row">
                        <label class="col-sm-3 col-form-label">Company</label>
                        <div class="col-sm-9">
                            <input class="form-control form-control-sm" id="company" placeholder="Search Company Here" autocomplete="off" ng-model="searchQuery" ng-keyup="searchCompany(searchQuery)">
                            <select class="form-control form-control-sm" size="10" id="companyList" ng-model="comList" style="position:absolute;z-index:999;width: 200px; overflow:auto ;background: white none repeat scroll 0% 0%;" ng-show="companyList.length > 0">
                                <option ng-repeat="company in companyList" value="{{company.id}}" ng-click="selectCompany(company)">{{company.name}}</option>
                            </select>
                        </div>
                    </div>
                    <fieldset class="border p-2">
                        <legend class="float-none w-auto fs-5">
                            Sales Information
                        </legend>
                        <div class="form-group row mt-4">
                            <label class="col-sm-4 col-form-label">Sales Price</label>
                            <div class="col-sm-8">
                                <input type="text" class="form-control form-control-sm text-right" ng-model="salesPrice" ng-change="updateTableValues()" ng-disabled="salesPriceDisabled" />
                            </div>
                        </div>
                        <div class="row">
                            <div class="col-sm-6">
                                <div class="form-group row">
                                    <label class="col-sm-5 col-form-label">VAT Rate</label>
                                    <div class="col-sm-7">
                                        <input type="text" class="form-control form-control-sm text-right" ng-model="taxType" ng-disabled="taxTypeDisabled" />
                                        @* <select class="form-select form-select-sm text-right" ng-model="taxType">
                                        <option ng-repeat="o in taxTypes" value="{{o.id}}">{{selectedVatRate}} %</option>
                                        </select> *@
                                    </div>
                                </div>
                            </div>
                            <div class="col-sm-6">
                                <div class="form-group row">
                                    <label class="col-sm-4 col-form-label">Amount</label>
                                    <div class="col-sm-8">
                                        <input type="text" class="form-control form-control-sm text-right" ng-model="amount"  ng-disabled="amountDisable" />
                                    </div>
                                </div>
                            </div>
                        </div>


                        <div class="form-group row">
                            <label class="col-sm-4 col-form-label">Job Title</label>
                            <div class="col-sm-8">
                                <select class="form-select form-select-sm" ng-model="jobTitle">
                                    <option ng-repeat="o in jobTitleData" value="{{o.jp_Id}}" data-title="{{o.title}}">{{o.title}}</option>
                                </select>
                            </div>
                        </div>
                        <div class="form-group row">
                            <label class="col-sm-4 col-form-label">Billing Person</label>
                            <div class="col-sm-8">
                                <input class="form-control form-control-sm" placeholder="Search Billing Person Here" autocomplete="off" ng-model="searchKeyword" ng-keyup="searchBillingPerson()">
                                @* <select class="form-select form-select-sm" size="10" ng-model="billingPersonList" style="position:absolute;z-index:999;width: 300px; overflow:auto ;background: white none repeat scroll 0% 0%;" ng-show="billingPersonListVisible && (getBillingPersonData && getBillingPersonData.length > 0 && getBillingPersonData[0].name !== '')" ng-change="loadDesignation()">
                                    <option ng-repeat="o in getBillingPersonData | filter:searchFilter" value="{{o.name}}" ng-click="selectBillingPerson(o)">{{o.name}}</option>
                                </select> *@

                                <select class="form-select form-select-sm" size="10" ng-model="billingPersonList" style="position:absolute;z-index:999;width: 300px; overflow:auto ;background: white none repeat scroll 0% 0%;" ng-show="dropdownVisible" ng-change="loadDesignation()">
                                    <option ng-repeat="o in searchFilter()" value="{{o.name}}" ng-click="selectBillingPerson(o)">{{o.name}}</option>
                                </select>
                            </div>
                        </div>

                        <div class="form-group row">
                            <label class="col-sm-4 col-form-label">Designation</label>
                            <div class="col-sm-8">
                                <input type="text" class="form-control form-control-sm" ng-model="designation" />
                                <input type="text" class="form-control form-control-sm" ng-model="Email" hidden />
                                <input type="text" class="form-control form-control-sm" ng-model="Mobile" hidden />
                            </div>
                        </div>
                        <div class="form-group row" hidden>
                            <label class="col-sm-4 col-form-label">Workshop Date</label>
                            <div class="col-sm-8">
                                <input class="form-control form-control-sm" ng-model="workshopDate" />
                            </div>
                        </div>
                        <div class="form-group row">
                            <label class="col-sm-4 col-form-label">Reference No</label>
                            <div class="col-sm-8">
                                <input class="form-control form-control-sm" ng-model="referenceNo" />
                            </div>
                        </div>
                        <div class="form-group row">
                            <label class="col-sm-4 col-form-label">Sales Person</label>
                            <div class="col-sm-8">
                                <select class="form-select form-select-sm" ng-model="salesPerson">
                                    <option value="0" selected>select</option>
                                    <option ng-repeat="o in salesPersons" value="{{o.salesPersonID}}">{{o.salesPersonName}}</option>
                                </select>
                            </div>
                        </div>
                        <div class="form-group row">
                            <label class="col-sm-4 col-form-label">Comments</label>
                            <div class="col-sm-8">
                                <textarea class="form-control form-control-sm" ng-model="comments"></textarea>
                            </div>
                        </div>

                        <div class="row mt-2">
                            <div class="col-sm-6 d-flex justify-content-end">
                                <button class="btn btn-success btn-sm px-5" ng-disabled="saveButtonDisabled" ng-click="save()">
                                    Save
                                    &nbsp;<span class="spinner-border spinner-border-sm" role="status" aria-hidden="true" ng-show="spinner"></span>
                                </button>
                            </div>
                            <div class="col-sm-6">
                                <button class="btn btn-primary btn-sm px-4" ng-click="makeInvoice()" ng-disabled="makeInvoiceDisable">Make Invoice</button>
                            </div>
                        </div>
                    </fieldset>

                </div>
                <div class="col-sm-6">
                    <div class="form-group row">
                        <label class="col-sm-3 col-form-label">Product Name</label>
                        @* <div class="col-sm-9">
                        <input class="form-control form-control-sm" placeholder="Search Product Here" autocomplete="off" ng-model="searchQueryProduct" ng-keyup="searchProduct(searchQueryProduct)">
                        <select class="form-control form-control-sm" size="10" ng-model="proList" style="position:absolute;z-index:999;width: 400px; overflow:auto ;background: white none repeat scroll 0% 0%;" ng-show="getProductList.length > 0">
                        <option ng-repeat="product in getProductList" value="{{product.id}}" ng-click="selectProduct(product)">{{product.ladgerName}}</option>
                        </select>
                        </div> *@

                        <div class="col-sm-9">
                            <select class="form-select form-select-sm" ng-model="proList" ng-change="updateVatRate()">
                                <option value="0">List of Products</option>
                                <option ng-repeat="product in getProductList" value="{{product.id}}" data-vatRate="{{product.vatRate}}" ng-click="selectProduct(product)">{{product.ladgerName}}</option>
                            </select>
                        </div>
                    </div>

                    <fieldset class="border p-2">
                        <legend class="float-none w-auto fs-5">
                            This Product is valid for
                        </legend>
                        <div class="row mt-4">
                            <div class="col-sm-6">
                                <label>
                                    <label><input ng-model="radioValue" ng-change="updateDuration()" value="1" type="radio" checked>&nbsp; One/less than one month</label>
                                </label>
                            </div>
                            <div class="col-sm-6">
                                <div class="form-group row">
                                    <label class="col-sm-3 col-form-label">From</label>
                                    <div class="col-sm-9">
                                        <input ng-model="dateFrom" ng-change="updateDuration()" class="form-control form-control-sm" type="date">
                                    </div>
                                </div>
                            </div>
                        </div>
                        <div class="row">
                            <div class="col-sm-6">
                                <label>
                                    <input ng-model="radioValue" ng-change="updateDuration()" value="2" type="radio">&nbsp; more than one month
                                </label><br />
                                Duration
                                <input ng-model="month" maxlength="2" size="2" readonly style="text-align: center;" ng-disabled="radioValue !== '2'"> months
                            </div>
                            <div class="col-sm-6">
                                <div class="form-group row">
                                    <label class="col-sm-3 col-form-label">To</label>
                                    <div class="col-sm-9">
                                        <input ng-model="dateTo" ng-change="updateDuration()" class="form-control form-control-sm" type="date" ng-disabled="radioValue !== '2'">
                                    </div>
                                </div>
                            </div>
                        </div>
                    </fieldset>




                    <fieldset class="border p-2 mt-3">
                        <legend class="float-none w-auto fs-5">
                            Sales Information
                        </legend>
                        <div class="row mt-4">
                            <div class="col-sm-6">
                                <label>No. fo invoice(s) would be created</label>
                            </div>
                            <div class="col-sm-6">
                                <input type="number" class="form-control form-control-sm text-right" ng-model="invoiceNo" ng-change="generateRows()">
                            </div>
                        </div>
                        <div>Give the schedule</div>
                        <div class="mt-2">
                            <table class="table table-bordered table-sm" style="height:150px;">
                                <thead>
                                    <tr>
                                        <th>SL No</th>
                                        <th>SDate</th>
                                        <th>Amount</th>
                                        <th>VAT</th>
                                    </tr>
                                </thead>
                                <tbody>
                                    <tr ng-repeat="row in rows">
                                        <td>{{$index+1}}</td>
                                        <td><input type="date" ng-model="row.sDate" class="form-control form-control-sm" /></td>
                                        <td class="text-right">{{row.salesPrice}}</td>
                                        <td class="text-right">{{row.taxAmount}}</td>
                                    </tr>
                                </tbody>
                            </table>
                        </div>
                    </fieldset>
                </div>
            </div>
        </div>



        <div class="modal fade" id="closejournal" tabindex="-1" aria-labelledby="exampleModalLabel" aria-hidden="true">
            <div class="modal-dialog">
                <div class="modal-content">
                    <div class="modal-header">
                        <h5 class="modal-title" id="exampleModalLabel">Journal Date</h5>
                        <button type="button" class="btn-close btn-sm" data-bs-dismiss="modal" aria-label="Close"></button>
                    </div>
                    <div class="modal-body">
                        <div class="row px-5">
                            <p class="text-center">Give the journal date.</p>
                            <input type="date" ng-model="journalDate" class="col-sm-8 offset-2 form-control form-control-sm" />
                        </div>
                    </div>
                    <div class="modal-footer">
                        <button type="button" class="btn btn-secondary btn-sm" data-bs-dismiss="modal">Close</button>
                        <button type="button" class="btn btn-primary btn-sm" ng-disabled="okButtonDisabled" ng-click="ok()">OK</button>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>
<script src="https://ajax.googleapis.com/ajax/libs/angularjs/1.7.9/angular.min.js"></script>
<link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/4.5.2/css/bootstrap.min.css">
<script>
    var app = angular.module('myApp', []);
    app.controller('myController', function ($scope, $http) {
        angular.element(document).ready(function () {

            var onlineCompanyId = @Json.Serialize(onlineCompanyId); // Serialize to handle potential JSON-related issues
            var onlineLedgerId = @Json.Serialize(onlineLedgerId); // Serialize to handle potential JSON-related issues
            if (onlineCompanyId !== null || onlineLedgerId !== null) {
                $scope.getBillingPerson('C', onlineCompanyId);
                $scope.getJobTitle('T', onlineCompanyId);
                $scope.getIdWiseCompany(onlineCompanyId);
                // $scope.getIdWiseProduct(onlineLedgerId);
                $scope.getTaxType();
                $scope.loadProduct();
                //$scope.taxType = '672';
                $scope.updateDuration();
                $scope.getSalesPerson();
                //$scope.taxTypeAmountDisable();
                $scope.saveButtonDisabled = false;
                $scope.taxTypeDisabled = true;
                //$scope.billingPersonListVisible = false;
                //$scope.makeInvoiceDisable = true;
               

                $scope.amount = '0.00';
                $scope.salesPrice = '0.00';
            } else {
                $scope.loadProduct();
                $scope.amount = '0.00';
                $scope.salesPrice = '0.00';
                $scope.salesPerson = '0';
                $scope.billingPerson = '0';
                //$scope.taxType = '672';
                $scope.month = '1';
                $scope.proList = '0';
                $scope.invoiceNo = 0;
                //$scope.amountDisable = true;
                $scope.getSalesPerson();
                $scope.getTaxType();
                $scope.saveButtonDisabled = true;
                $scope.makeInvoiceDisable = true;
                $scope.salesPriceDisabled = true;  
                $scope.taxTypeDisabled = true;
            }


        });

        $scope.dateFrom = new Date();
        $scope.dateTo = new Date();
        $scope.journalDate = new Date();

        // $scope.taxTypeAmountDisable = function () {
        //     if ($scope.taxType == '0') {
        //         $scope.amountDisable = true;
        //     } else {
        //         $scope.amountDisable = false;
        //     }
        // };

        

        $scope.radioValue = "1";
        $scope.updateDuration = function () {
            var date1 = new Date($scope.dateFrom);
            var date2 = new Date($scope.dateTo);

            var dif = (date2 - date1) / (1000 * 60 * 60 * 24);
            var m = parseInt(dif / 30);
            var r = dif % 30;

            if (r >= 15)
                m = (m + 1);

            if (m === 0)
                m = m + 1;

            $scope.month = m.toString();
        };


        $scope.companyList = [];
        $scope.selectedCompany = null;

        $scope.searchCompany = function (startingKey) {
            if (startingKey && startingKey.length > 1) {
                let Url = '';
                if (window.location.hostname == 'localhost')
                    Url = '/Company/GetCompanyListByKey';
                else
                    Url = '/AccountingNew/Company/GetCompanyListByKey';

                $http.get(Url, { params: { startingKey: startingKey } })
                    .then(function (response) {
                        $scope.companyList = response.data;
                    }, function (error) {
                        console.error(error);
                    })
            } else {
                $scope.companyList = [];
            }
        };

        $scope.selectCompany = function (company) {
            $scope.selectedCompany = company;
            $scope.searchQuery = company.name;
            $scope.companyList = [];
            $scope.salesPriceDisabledEnabled();           

            $scope.setOption();
            $scope.saveButtonDisabled = false;
        }
        
        $scope.salesPriceDisabledEnabled = function () {
            if ($scope.proList > 0 && $scope.selectedCompany) {
                $scope.salesPriceDisabled = false;
            } else {
                $scope.salesPriceDisabled = true;
            }
        }

        $scope.selectCompanyBillPerson = function (company) {
            $scope.selectedCompany = company;
            $scope.searchQuery = company.name;
            $scope.companyList = [];

            $scope.setOptionBillPerson();
            $scope.saveButtonDisabled = false;
        }

        $scope.searchBillingPerson = function () {
            $scope.selectCompanyBillPerson($scope.selectedCompany);
        }



        // $scope.getProductList = [];
        // $scope.selectedProduct = null;

        // $scope.searchProduct = function (startingKey) {
        //     if (startingKey && startingKey.length > 1) {
        //         let Url = '';
        //         if (window.location.hostname == 'localhost')
        //             Url = '/Ledger/GetProductListByKey';
        //         else
        //             Url = '/AccountingNew/Ledger/GetProductListByKey';

        //         $http.get(Url, { params: { startingKey: startingKey } })
        //             .then(function (response) {
        //                 $scope.getProductList = response.data;
        //             }, function (error) {
        //                 console.error(error);
        //             })
        //     } else {
        //         $scope.getProductList = [];
        //     }
        // };

        // $scope.selectProduct = function (product) {
        //     $scope.selectedProduct = product;
        //     $scope.searchQueryProduct = product.ladgerName;
        //     $scope.getProductList = [];
        // }


        $scope.loadProduct = function () {
            let Url = '';
            if (window.location.hostname == 'localhost')
                Url = '/Ledger/GetProductListByKey';
            else
                Url = '/AccountingNew/Ledger/GetProductListByKey';

            $http.get(Url)
                .then(function (response) {
                    if (@onlineledger > 0 ) {
                        $scope.proList = '@onlineledger';
                        $scope.getProductList = response.data;
                        $scope.taxType = $scope.getProductList.find(product => product.id == @onlineledger).vatRate + '%';
                    }
                    $scope.getProductList = response.data;
                }, function (error) {
                    console.error(error);
                })

        };

        $scope.updateVatRate = function () {
            $scope.salesPriceDisabledEnabled();
            if ($scope.proList) {
                $scope.taxType = $scope.getProductList.find(product => product.id == $scope.proList).vatRate + '%';
            } else {
                $scope.taxType = null;
            }
        };

        


        $scope.getSalesPerson = function () {
            let Url = '';
            if (window.location.hostname == 'localhost')
                Url = '/Sale/GetSalesPersonsByProductID';
            else
                Url = '/AccountingNew/Sale/GetSalesPersonsByProductID';
            $http.get(Url, { params: { productID: 2 } })
                .then(function (response) {
                    $scope.salesPersons = response.data;
                    $scope.salesPerson = "0";
                }, function (error) {
                    console.error(error);
                });
        };

        $scope.getIdWiseCompany = function (id) {
            let Url = '';
            if (window.location.hostname == 'localhost')
                Url = '/Company/GetCompanyById';
            else
                Url = '/AccountingNew/Company/GetCompanyById';
            $http.get(Url, { params: { companyId: id } })
                .then(function (response) {
                    $scope.idWiseCompany = response.data;
                    $scope.onlineCompanyId = @onlineCompanyId
                        // Find the selected company based on onlineCompanyId
                        $scope.selectedCompany = $scope.idWiseCompany.find(function (company) {
                            return company.id === $scope.onlineCompanyId;
                        });

                    // Set the searchQuery and other related variables
                    if ($scope.selectedCompany) {
                        $scope.searchQuery = $scope.selectedCompany.name;
                    } else {
                        $scope.searchQuery = 'Select';
                    }
                }, function (error) {
                    console.error(error);
                });
        };

        // $scope.getIdWiseProduct = function (id) {

        //     let Url = '';
        //     if (window.location.hostname == 'localhost')
        //         Url = '/Ledger/GetProductById';
        //     else
        //         Url = '/AccountingNew/Ledger/GetProductById';

        //     $http.get(Url, { params: { pId: id } })
        //         .then(function (response) {
        //             $scope.products = response.data;


        //             $scope.onlineLedgerId = @onlineLedgerId

        //                 $scope.selectedProduct = $scope.products.find(function (o) {
        //                     return o.id === $scope.onlineLedgerId;
        //                 });

        //             // Set the searchQuery and other related variables
        //             if ($scope.selectedProduct) {
        //                 $scope.proList = $scope.selectedProduct.id.toString();
        //             } else {
        //                 $scope.proList = 'Select';
        //             }
        //         }, function (error) {
        //             console.error(error);
        //         });
        // };

        $scope.setOption = function () {
            $scope.getBillingPerson('C', $scope.comList);
            $scope.getJobTitle('T', $scope.comList);
        }

        $scope.setOptionBillPerson = function () {
            $scope.getBillingPerson('C', $scope.selectedCompany.id);
        }

        $scope.selectBillingPerson = function (o) {
            $scope.selectedBillingPerson = o;
            $scope.searchKeyword = o.name;
            $scope.getBillingPersonData = [];
        }

        // $scope.searchFilter = function (billingPerson) {
        //     var keyword = $scope.searchKeyword || ''; // Get the search keyword from a model variable
        //     var matched = billingPerson.name.toLowerCase().indexOf(keyword.toLowerCase()) !== -1;
        //     $scope.billingPersonListVisible = keyword === '' || matched;
        //     return matched;
        // };

        $scope.dropdownVisible = false;

        $scope.searchFilter = function (billingPerson) {
            var keyword = $scope.searchKeyword || ''; // Get the search keyword
            var matched = []; // Array to store matched objects

            for (var i = 0; i < $scope.getBillingPersonData.length; i++) {
                if ($scope.getBillingPersonData[i].name.toLowerCase().indexOf(keyword.toLowerCase()) !== -1) {
                    matched.push($scope.getBillingPersonData[i]); // Add matching object to the array
                }
            }

            $scope.dropdownVisible = matched.length > 0; // Set dropdown visibility based on matches

            return matched; // Return the array of matched objects
        };


        $scope.getBillingPerson = function (type, cId) {
            let Url = '';
            if (window.location.hostname == 'localhost')
                Url = '/Company/GetContactPersonsOrJobTitle';
            else
                Url = '/AccountingNew/Company/GetContactPersonsOrJobTitle';

            $http.get(Url, { params: { type: type, cId: cId } })
                .then(function (response) {
                    $scope.getBillingPersonData = response.data;
                    if ($scope.getBillingPersonData.length > 0 || $scope.getBillingPersonData[0].name == "") {
                        $scope.billingPersonListVisible = false;
                    }
                    else {
                        $scope.billingPersonListVisible = true;
                    }


                }, function (error) {
                    console.error(error);
                })
        }

        $scope.loadDesignation = function () {
            var selectedBillingPerson = $scope.selectedBillingPerson;

            if (selectedBillingPerson) {
                $scope.designation = selectedBillingPerson.designation;
            } else {
                $scope.designation = '';
            }
        };


        $scope.getJobTitle = function (type, cId) {
            let Url = '';
            if (window.location.hostname == 'localhost')
                Url = '/Company/GetContactPersonsOrJobTitle';
            else
                Url = '/AccountingNew/Company/GetContactPersonsOrJobTitle';
            $http.get(Url, { params: { type: type, cId: cId } })
                .then(function (response) {
                    var onlineJpId = @onlineJobId;
                    $scope.jobTitleData = response.data;
                    if (@onlineJobId == 0) {
                        $scope.jobTitle = "";
                    } else {
                        // $scope.jobTitle = $scope.jobTitleData[0].jp_Id.toString();
                        $scope.jobTitle = onlineJpId.toString();
                    }

                    $scope.dateFrom = new Date($scope.jobTitleData[0].postingDate);
                    $scope.dateTo = new Date($scope.jobTitleData[0].validDate);
                    if ($scope.getBillingPersonData.length == 0) {
                        $scope.searchKeyword = $scope.jobTitleData[0].companyName;
                        $scope.designation = $scope.jobTitleData[0].type;
                        $scope.Email = $scope.jobTitleData[0].email;
                        $scope.Mobile = $scope.jobTitleData[0].mobile;
                    }
                    else {
                        if ($scope.getBillingPersonData.length > 0) {
                            $scope.billingPersonListVisible = false;
                            $scope.designation = $scope.jobTitleData[0].type;
                            $scope.searchKeyword = $scope.jobTitleData[0].companyName;
                            $scope.Email = $scope.jobTitleData[0].email;
                            $scope.Mobile = $scope.jobTitleData[0].mobile;
                        } else {
                            $scope.designation = $scope.jobTitleData[0].type;
                            $scope.searchKeyword = $scope.jobTitleData[0].companyName;
                            $scope.Email = $scope.jobTitleData[0].email;
                            $scope.Mobile = $scope.jobTitleData[0].mobile;
                        }

                    }


                }, function (error) {
                    console.error(error);
                })
        }

        $scope.getTaxType = function () {
            let Url = '';
            if (window.location.hostname == 'localhost')
                Url = '/Ledger/GetProducts';
            else
                Url = '/AccountingNew/Ledger/GetProducts';
            $http.get(Url, { params: { admin: 0, account: 0, groupname: " ", isAll: " ", isI: " ", isVatType: 1 } })
                .then(function (response) {
                    $scope.taxTypes = response.data.filter(function (item) {
                        return item.id === 672 && item.sbName === 'VAT (AP)'
                    });
                }, function (error) {
                    console.error(error);
                })
        }



        $scope.rows = [];

        $scope.generateRows = function () {
            var numRows = parseInt($scope.invoiceNo) || 0;
            $scope.rows = [];

            for (var i = 0; i < numRows; i++) {
                var newRow = {
                    sDate: new Date(),
                    salesPrice: $scope.salesPrice,
                    taxAmount: $scope.amount
                };
                $scope.rows.push(newRow);
            }
        };

        $scope.updateTableValues = function () {
            // Set invoiceNo to 1 by default if it's not already set
            if (!$scope.invoiceNo) {
                $scope.invoiceNo = 1;
                $scope.generateRows(); // Update rows based on the new invoiceNo
            }
            if (@onlineCompany > 0) {
                $scope.VatExemptionVariableForOnline = $scope.idWiseCompany[0].anyVatExemption;
                if ($scope.VatExemptionVariableForOnline == false) {
                    $scope.amountDisable = false;
                    var taxRate = parseFloat($scope.taxType) / 100;
                    if ($scope.salesPrice) {
                        $scope.amount = ($scope.salesPrice * taxRate).toFixed(2); // Assuming you want the amount rounded to 2 decimal places
                    } else {
                        $scope.amount = ''; // Clear the amount if salesPrice is empty
                    }
                } else {
                    $scope.amountDisable = true;
                }
            }
            else {
                $scope.VatExemptionVariable = $scope.selectedCompany.anyVatExemption;
                if ($scope.VatExemptionVariable == false) {
                    $scope.amountDisable = false;
                    var taxRate = parseFloat($scope.taxType) / 100;
                    if ($scope.salesPrice) {
                        $scope.amount = ($scope.salesPrice * taxRate).toFixed(2); // Assuming you want the amount rounded to 2 decimal places
                    } else {
                        $scope.amount = ''; // Clear the amount if salesPrice is empty
                    }
                } else{
                    $scope.amountDisable = true;
                }
            }

            
            

            angular.forEach($scope.rows, function (row) {
                row.salesPrice = $scope.salesPrice;
                row.taxAmount = $scope.amount;
            });
            
        };

        $scope.save = function () {
            var enteredCompanyName = $scope.searchQuery.trim();
            if (enteredCompanyName !== $scope.selectedCompany.name.trim()) {
                confirm("The Entered Company doesn't exist. Do you want to continue?");
            }
            var isConfirmedSale = confirm('Are you sure to make a new sale ?');
            if (isConfirmedSale) {

                // $scope.total = 0.00;
                // for (var i = 0; i < $scope.rows.length; i++) {
                //     if ($scope.rows[i].sDate !== "") {
                //         $scope.total += parseFloat($scope.rows[i].salesPrice) + parseFloat($scope.rows[i].taxAmount);
                //     }
                // }
                var access = '@accessRights.Contains("1")';
                if (access == 'False') {
                    alert("Sorry, You have no permission to insert a record.");
                }
                else if ($scope.radioValue == '2' && $scope.dateFrom >= $scope.dateTo) {
                    alert("'From date' should not be greater than or equal to 'To date'");
                }
                else if ($scope.salesPrice == "" || $scope.salesPrice == "0.00" || $scope.salesPrice == undefined) {
                    alert("You must give the 'Sales Price'.");
                }
                // else if ($scope.rows.length <= 0) {
                //     alert("You must fulfill Schedule of Invoice first, then save this sales information.");
                // }
                // else if (parseFloat($scope.total) !== parseFloat(parseFloat($scope.salesPrice) + $scope.taxAmount)) {
                //     alert("The total amount of the invoice scheduler is not equal to the sales price.");
                // }
                else if ($scope.searchKeyword == "0" || $scope.searchKeyword == "" || $scope.searchKeyword == null || $scope.searchKeyword == undefined) {
                    alert("You must give the name of 'Billing Person'.");
                }
                else if ($scope.salesPerson == 0 || $scope.salesPerson == "") {
                    alert("You must select a 'Sales Person'.");
                }
                else if ($scope.proList == 0 || $scope.proList == "" || $scope.proList == undefined) {
                    alert("You must select a 'Product Name'.");
                }
                // else if ($scope.taxType != '0' && parseFloat($scope.rows[0].taxAmount) === 0 || $scope.rows[0].taxAmount == undefined) {
                //     alert("You must give the 'VAT Amount'.");
                // }

                else {
                    $("#closejournal").modal('show');
                }
            }
        };

        $scope.ok = function () {
            $scope.okButtonDisabled = true;
            $scope.formattedFromDate = $scope.dateFrom.toISOString().split('T')[0];
            $scope.formattedToDate = $scope.dateTo.toISOString().split('T')[0];
            $scope.formattedJournalDate = $scope.journalDate.toISOString().split('T')[0];
            var selectedJpId = $scope.jobTitleData.find(function (s) {
                return s.jp_Id == $scope.jobTitle;
            });
            let requestBodyModel = {
                UserId: @userId,
                CId: $scope.selectedCompany.id,
                // PCode: parseInt($scope.selectedProduct.id) || 0,
                PCode: parseInt($scope.proList) || 0,
                FromDate: $scope.formattedFromDate ? $scope.formattedFromDate : "",
                ToDate: $scope.formattedToDate ? $scope.formattedToDate : "",
                JournalDate: $scope.formattedJournalDate ? $scope.formattedJournalDate : "",
                SalesPrice: $scope.salesPrice,
                // BillingPerson: $scope.billingPerson,
                BillingPerson: $scope.searchKeyword,
                Designation: $scope.designation == null ? "" : $scope.designation,
                Email: $scope.Email == null ? "" : $scope.Email,
                Mobile: $scope.Mobile == null ? "" : $scope.Mobile,
                Comment: $scope.comments || "",
                Duration: $scope.month,
                NoOfInvoice: $scope.invoiceNo,
                RefNo: $scope.referenceNo || "",
                // TypeId: $scope.taxType ? $scope.taxType.toString() : "",
                TypeId: $scope.amount == 0 ? "0" : "672" ,// "672",
                Vat: $scope.amount || 0,
                JpId: $scope.jobTitle ? $scope.jobTitle : 0,
                JobTitle: selectedJpId == undefined ? "" : selectedJpId.title,
                // workshopDate: $scope.workshopdateDiv ? $scope.workshopdate : "",
                SPerson: $scope.salesPerson
            };
            let Url = '';
            if (window.location.hostname == 'localhost')
                Url = '/Sale/Save';
            else
                Url = '/AccountingNew/Sale/Save';

            $scope.spinner = true;
            $http.post(Url, JSON.stringify(requestBodyModel), { headers: { 'Content-Type': 'application/json' } })
                .then(function (response) {

                    if (response.data === "Success") {
                        alert('All information has been saved successfully.');
                        $("#closejournal").modal('hide');
                        $scope.makeInvoiceDisable = false;
                        $scope.spinner = false;
                        $scope.okButtonDisabled = false;
                    }
                    else {
                        alert(response.data);
                        $("#closejournal").modal('hide');
                        $scope.spinner = false;
                    }
                })
        };


        // $scope.getCompanyInfo = function () {
        //     $scope.cpId = @onlineCompanyId
        //         $http.get('/Company/GetLocalCompanyInfo', { params: { cpId: $scope.cpId } })
        //             .then(function (response) {
        //                 $scope.companyInfo = response.data;
        //             })
        //             .catch(function (error) {
        //                 console.log(error);
        //             })
        // };



        $scope.makeInvoice = function () {
            $scope.cid = ($scope.selectedCompany.id).toString();
            if ($scope.cid != null) {
                window.open('.././Invoice/MakeInvoice?companyId=' + $scope.cid);

            }
        }


    });
</script>


